-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Sty 15, 2025 at 12:07 AM
-- Wersja serwera: 10.4.32-MariaDB
-- Wersja PHP: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `db_project`
--

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `allergens`
--

CREATE TABLE `allergens` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `allergens`
--

INSERT INTO `allergens` (`id`, `name`) VALUES
(1, 'Millet'),
(2, 'Oat Milk'),
(3, 'Cod'),
(4, 'Quinoa'),
(5, 'Eggplant'),
(6, 'Soybeans'),
(7, 'Mustard Seeds'),
(8, 'Parsley'),
(9, 'Almond Milk'),
(10, 'Corn Starch'),
(11, 'Corn Flour'),
(12, 'Sunset Yellow'),
(13, 'Gelatin'),
(14, 'Lychee'),
(15, 'Brazil Nuts'),
(16, 'Psyllium Husk'),
(17, 'Pecans'),
(18, 'Allura Red'),
(19, 'Lamb'),
(20, 'Buckwheat'),
(21, 'Tilapia'),
(22, 'Hemp Milk'),
(23, 'Sunflower Seeds'),
(24, 'Sodium Nitrate'),
(25, 'Natto'),
(26, 'Xanthan Gum'),
(27, 'Passion Fruit'),
(28, 'Hominy'),
(29, 'Tamari'),
(30, 'Cumin'),
(31, 'Amaranth'),
(32, 'Saccharin'),
(33, 'Mint'),
(34, 'Soy Lecithin'),
(35, 'Sodium Nitrite'),
(36, 'Tragacanth Gum'),
(37, 'Duck'),
(38, 'Pea Shoots'),
(39, 'Acacia Gum'),
(40, 'Tartrazine'),
(41, 'Lobster'),
(42, 'Anise'),
(43, 'Navy Beans'),
(44, 'Basil'),
(45, 'Sage'),
(46, 'Annatto'),
(47, 'Split Peas'),
(48, 'Nutritional Yeast'),
(49, 'Poppy Seeds'),
(50, 'Coriander'),
(51, 'Pistachios'),
(52, 'Chives'),
(53, 'Halibut'),
(54, 'Miso Paste'),
(55, 'Chickpeas'),
(56, 'Carmine'),
(57, 'Onions'),
(58, 'Acesulfame Potassium'),
(59, 'Green Peas'),
(60, 'Kamut'),
(61, 'Millet Flour'),
(62, 'Carob Bean Gum'),
(63, 'Royal Jelly'),
(64, 'Stevia'),
(65, 'Barley'),
(66, 'Soy Sauce'),
(67, 'Pea Protein'),
(68, 'Potatoes'),
(69, 'Teff'),
(70, 'Thyme'),
(71, 'Hydrolyzed Vegetable Protein (HVP)'),
(72, 'Grits'),
(73, 'Chestnuts'),
(74, 'Anchovies'),
(75, 'Sucralose'),
(76, 'Scallops'),
(77, 'Chia Seeds'),
(78, 'Bananas'),
(79, 'Venison'),
(80, 'Disodium Inosinate'),
(81, 'Seitan'),
(82, 'Peanuts'),
(83, 'Dragon Fruit'),
(84, 'Salmon'),
(85, 'Papaya'),
(86, 'Sesame Seeds'),
(87, 'Nutmeg'),
(88, 'Erythrosine'),
(89, 'Cream'),
(90, 'Tuna'),
(91, 'Hemp Seeds'),
(92, 'Fish'),
(93, 'Dill'),
(94, 'Polenta'),
(95, 'Star Fruit'),
(96, 'Shallots'),
(97, 'Haddock'),
(98, 'Beef'),
(99, 'Almonds'),
(100, 'Crab');

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `allergens_ingredients`
--

CREATE TABLE `allergens_ingredients` (
  `id_allergen` int(11) NOT NULL,
  `id_ingredient` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `allergens_ingredients`
--

INSERT INTO `allergens_ingredients` (`id_allergen`, `id_ingredient`) VALUES
(10, 37),
(68, 33),
(24, 78),
(25, 73),
(13, 96),
(11, 28),
(8, 94),
(20, 67),
(87, 37),
(62, 93),
(75, 51),
(37, 57),
(91, 6),
(87, 50),
(40, 64),
(48, 10),
(59, 31),
(13, 70),
(10, 27),
(14, 68),
(45, 28),
(71, 54),
(25, 60),
(75, 72),
(78, 3),
(55, 47),
(16, 8),
(84, 41),
(96, 35),
(99, 48),
(65, 100),
(94, 83),
(50, 31),
(43, 24),
(40, 6),
(67, 14),
(40, 96),
(1, 52),
(32, 1),
(48, 64),
(43, 100),
(87, 43),
(72, 72),
(96, 14),
(52, 73),
(67, 15),
(58, 6),
(30, 61),
(56, 32),
(15, 69),
(1, 37),
(18, 31),
(47, 46),
(88, 66),
(74, 26),
(31, 29),
(52, 22),
(78, 40),
(83, 75),
(8, 1),
(14, 32),
(42, 80),
(71, 33),
(83, 21),
(64, 65),
(91, 1),
(46, 18),
(44, 24),
(2, 39),
(75, 90),
(11, 98),
(28, 87),
(82, 73),
(92, 34),
(57, 70),
(55, 74),
(36, 3),
(18, 38),
(22, 32),
(39, 92),
(93, 38),
(29, 48),
(2, 36),
(57, 29),
(40, 40),
(76, 62),
(57, 84),
(99, 12),
(65, 31),
(17, 52),
(23, 20),
(92, 28),
(89, 32),
(9, 74),
(92, 37),
(95, 3),
(30, 64),
(75, 86),
(46, 96),
(9, 68),
(50, 90),
(50, 90),
(50, 92),
(50, 93),
(50, 93),
(50, 95);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `comments`
--

CREATE TABLE `comments` (
  `id` int(11) NOT NULL,
  `comment` text NOT NULL,
  `score` float NOT NULL,
  `verified` tinyint(1) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `verified_by` int(11) NOT NULL,
  `deleted` tinyint(1) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `comments`
--

INSERT INTO `comments` (`id`, `comment`, `score`, `verified`, `updated_by`, `verified_by`, `deleted`) VALUES
(1, 'Great', 4.5, 1, 3, 3, 0),
(2, 'Good', 4.5, 0, 3, 0, 0),
(3, 'Great', 4.5, 0, 3, 0, 0),
(4, 'Cool', 4.2, 0, 3, 0, 0),
(5, 'Super', 4.7, 0, 3, 0, 0);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `coordinates`
--

CREATE TABLE `coordinates` (
  `id` int(11) NOT NULL,
  `verified` tinyint(1) NOT NULL,
  `coordinates` point NOT NULL,
  `coordinates_to_verify` point DEFAULT NULL,
  `updated_by` int(11) NOT NULL,
  `verified_by` int(11) NOT NULL,
  `edited_by` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `coordinates`
--

INSERT INTO `coordinates` (`id`, `verified`, `coordinates`, `coordinates_to_verify`, `updated_by`, `verified_by`, `edited_by`) VALUES
(1, 1, 0x0000000001010000004e4acd6ade894940fe85ed09e8f13040, 0x0000000001010000004c4b2f7a1b92494058d72062e50b3140, 10, 5, 0),
(2, 1, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000009e73bed5ba884940af0e9fc0be083140, 10, 5, 0),
(3, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000020d4597e46924940d882434031f73040, 6, 3, 0),
(4, 1, 0x0000000001010000003fd41ea0f691494049318a9b53123140, 0x000000000101000000f4c5fed12a8c4940a6d4b05a8f1b3140, 6, 2, 0),
(5, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000087f52819069649408e43c47ee6143140, 8, 4, 0),
(6, 1, 0x000000000101000000ba60d1c4cc874940f01790c0620d3140, 0x0000000001010000009ab8cde696944940f508f1b77f033140, 4, 2, 0),
(7, 1, 0x000000000101000000ddbdf5e8338a4940126b545c731c3140, 0x0000000001010000004a62db86429349406577ef259b283140, 7, 4, 0),
(8, 1, 0x000000000101000000a4fe22f9fa884940fdac3bee2b103140, 0x000000000101000000127ef52b1d874940b7009f142bf13040, 4, 4, 0),
(9, 1, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000009250f88356884940a8c77a72bcf13040, 5, 5, 0),
(10, 1, 0x000000000101000000f081700048894940b23df89f36f23040, 0x0000000001010000007ed3a5d87d8e4940857f2a1a89f53040, 1, 5, 0),
(11, 1, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000ceb7fb35d58649408bda3ad9390b3140, 4, 3, 0),
(12, 1, 0x000000000101000000db0139c0eb954940cb55e7baae113140, 0x000000000101000000e4adce258094494043725c18defe3040, 10, 3, 0),
(13, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000006560970929249400c96b543cc153140, 9, 4, 0),
(14, 1, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000381a51154b944940734cd4142efb3040, 7, 4, 0),
(15, 1, 0x00000000010100000097014ecc02974940552602b25ef23040, 0x000000000101000000a855dbe2fe874940cfd08921e6093140, 10, 4, 0),
(16, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000082872a6d0395494031d2b9eefe0d3140, 4, 1, 0),
(17, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000048d666bdf693494009d9d7636e023140, 3, 4, 0),
(18, 1, 0x000000000101000000b14f999c1d9249401c3319595f213140, 0x0000000001010000009ea6c645a48c494070d5e36e09f43040, 10, 5, 0),
(19, 1, 0x000000000101000000cd60aedd689149407435fafe54f43040, 0x000000000101000000d0505b44839449403115131c1f143140, 10, 2, 0),
(20, 1, 0x000000000101000000f73c9b396d9449404863a2c82f1e3140, 0x000000000101000000799dce3aa08c4940281f2ed656273140, 7, 3, 0),
(21, 1, 0x00000000010100000037040b89a486494015cfe2bfa51f3140, 0x000000000101000000a31f52284f934940ac2d3e7e23f33040, 7, 5, 0),
(22, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000011bf84229895494088504a9749273140, 1, 4, 0),
(23, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000045c7723f598b4940527b4c5e910e3140, 7, 1, 0),
(24, 1, 0x00000000010100000064742666c18b4940f6853a5a85003140, 0x00000000010100000050e56d602e924940d183f89c260b3140, 2, 3, 0),
(25, 1, 0x000000000101000000133d061224974940c9354e3726163140, 0x0000000001010000004cf64c9d3d874940f0c5236f7a193140, 6, 5, 0),
(26, 1, 0x000000000101000000977530a838954940d73581409bfc3040, 0x00000000010100000088956874888b494038f009a01c233140, 3, 2, 0),
(27, 1, 0x000000000101000000ab3912bdb18a494023731c904e093140, 0x0000000001010000002b2ca2e4aa894940980e6e9eb2f33040, 2, 3, 0),
(28, 1, 0x000000000101000000c23c09cf488c494070f669177d073140, 0x000000000101000000fbc8ae3e62914940cc04ea9c84ee3040, 7, 1, 0),
(29, 1, 0x0000000001010000006ea5cf9b5987494074f66f19cc183140, 0x000000000101000000908510b35790494095f45b10fb0e3140, 5, 2, 0),
(30, 1, 0x000000000101000000d632e744ce95494092a93c8273203140, 0x00000000010100000000136e0c98914940609fab456eef3040, 6, 1, 0),
(31, 1, 0x00000000010100000016b5f3984191494025d77cb1491b3140, 0x0000000001010000009735efa70d874940b564a3b872053140, 3, 1, 0),
(32, 1, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000006fd4ca00d191494040cabc32ea043140, 6, 1, 0),
(33, 1, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000f06e4e0a9b8e4940d71ae558fb153140, 4, 2, 0),
(34, 1, 0x000000000101000000e458706a9c8f4940d938014b9cf43040, 0x00000000010100000020b432bf868b49406de152e07e073140, 3, 4, 0),
(35, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000fcc66fff89494007c539ef1cfa3040, 3, 5, 0),
(36, 1, 0x0000000001010000007bc10636189349400b39c1e1131b3140, 0x000000000101000000e8e4e02618974940fe5a8ee9180f3140, 5, 4, 0),
(37, 1, 0x00000000010100000025071313508b4940b79b09587a173140, 0x00000000010100000085cd96b1778e49404997fa9aa7ef3040, 3, 3, 0),
(38, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000099e4ee4a84914940d1fb9d4b0b143140, 1, 4, 0),
(39, 1, 0x000000000101000000aa6a2deebb8849404881d84d791a3140, 0x000000000101000000ae5fcce8bc924940a5a68be749f73040, 7, 2, 0),
(40, 1, 0x00000000010100000074e8ec6cc19149408b05908aa8153140, 0x00000000010100000022a36e2ffc95494099cd666ff1103140, 4, 5, 0),
(41, 1, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000011914b31d186494066f6717e57033140, 1, 2, 0),
(42, 1, 0x000000000101000000cd5bd8fa17894940ef96892a40f53040, 0x0000000001010000004c999729d1874940f5c37dc1f8013140, 1, 3, 0),
(43, 1, 0x000000000101000000c7f611aa71914940f487e42a5a263140, 0x0000000001010000004b023f14438d49407129fddb91263140, 5, 3, 0),
(44, 1, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000002eb33df635954940981e1cdd8af83040, 8, 5, 0),
(45, 1, 0x000000000101000000aa52c81e848f49400020985a0a243140, 0x000000000101000000a3cef6cc31974940ceefec045e053140, 1, 4, 0),
(46, 1, 0x0000000001010000003da0bf657a884940d43c325a07003140, 0x00000000010100000008e5529dbe8f4940f6b395efedf03040, 10, 4, 0),
(47, 1, 0x000000000101000000e95f58144187494056c8f83f2dfc3040, 0x0000000001010000007a0ec05a149149406896fe9434083140, 6, 4, 0),
(48, 1, 0x00000000010100000077e92a5b8e91494081337b25c60e3140, 0x0000000001010000009ad8f795598849406eb2265fa7fb3040, 6, 2, 0),
(49, 1, 0x0000000001010000001c22ed4a738b49400b6c12fa9cf03040, 0x0000000001010000007c74ffd8cf8f4940b2db4136000a3140, 6, 5, 0),
(50, 1, 0x000000000101000000663ac18cc09449409b633aefb2ee3040, 0x00000000010100000000000000000000000000000000000000, 0, 3, 0),
(51, 0, 0x000000000101000000c47a126d358c4940a03b07b51d1f3140, 0x00000000010100000000000000000000000000000000000000, 5, 3, 0),
(52, 0, 0x000000000101000000d94ed38928914940705b0a316b243140, 0x000000000101000000c0b2015577904940538cf597b6153140, 8, 2, 0),
(53, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000007cb1027bcd8b494027d07fef54ef3040, 2, 5, 0),
(54, 0, 0x0000000001010000007d6e5f0411954940268c89b2f41b3140, 0x000000000101000000c55b0ef08d8a494062bcfa4939103140, 10, 5, 0),
(55, 0, 0x000000000101000000dfada9e09a904940ca23e6b0b3f33040, 0x000000000101000000a269afdeaa914940fef3c86c79283140, 6, 4, 0),
(56, 0, 0x00000000010100000064936ec651894940df767c990b063140, 0x000000000101000000a611dd3c459449402958f64c24283140, 6, 5, 0),
(57, 0, 0x000000000101000000aa2aab34719149408a5084fbdf0f3140, 0x000000000101000000ce2e334959884940f1ab1cb130093140, 4, 4, 0),
(58, 0, 0x000000000101000000e72b36f26a954940b6a3b3353b163140, 0x000000000101000000a05737f8329149402227db0ea1163140, 4, 4, 0),
(59, 0, 0x0000000001010000003a9b191fb1924940b204c436ac133140, 0x000000000101000000b15e9b7533944940fefd9a98b0f23040, 6, 3, 0),
(60, 0, 0x000000000101000000662c253b278e4940cd08d136170e3140, 0x000000000101000000631676ed9d874940a32ab975a9183140, 9, 3, 0),
(61, 0, 0x000000000101000000f75968c78d914940c5ba75d7e4ff3040, 0x000000000101000000883cf107989549401c1c83fa83073140, 4, 3, 0),
(62, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000009f7dbaa1c29149404dcbe0a9cc0d3140, 2, 4, 0),
(63, 0, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000bc1060c80d874940e882b2cc13fe3040, 10, 1, 0),
(64, 0, 0x0000000001010000004137044eae88494083a43bf688f73040, 0x0000000001010000000eaca54a778b4940a33615d841263140, 8, 3, 0),
(65, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000002db6672467894940657801598e263140, 10, 4, 0),
(66, 0, 0x000000000101000000564d981b1d8f4940d23b58e1c8053140, 0x00000000010100000076a7ecc3c7944940b097feca7d153140, 2, 5, 0),
(67, 0, 0x000000000101000000257b0295a59049406f743a9200fb3040, 0x0000000001010000001e3b294cda9649407a64edb78b1e3140, 3, 2, 0),
(68, 0, 0x00000000010100000010d6a7099d864940d3b77bdf89023140, 0x0000000001010000000f5dddb48f924940b9511f06cdef3040, 10, 1, 0),
(69, 0, 0x000000000101000000f028699ed48b4940a4de8afccf0e3140, 0x000000000101000000756aaa2278884940a26a6dedeb133140, 8, 2, 0),
(70, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000063b12f0ce08a4940a9134d51bf1b3140, 1, 3, 0),
(71, 0, 0x000000000101000000da0c7e93fd9649400db022fdc0f83040, 0x00000000010100000044a1e5709196494093e2b0262af63040, 1, 2, 0),
(72, 0, 0x000000000101000000cd5a6a0360874940805ecdbb93f63040, 0x0000000001010000004d5762e80d8849404f74bc47e8033140, 2, 1, 0),
(73, 0, 0x000000000101000000496775b2ec904940b33f75d3c2fa3040, 0x000000000101000000defec5c3e8894940ffc04c3b25f03040, 3, 3, 0),
(74, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000065b9c6e70d8f49406b28dc5c32fe3040, 7, 1, 0),
(75, 0, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000f3862af8be8f49407f67f14f21223140, 1, 5, 0),
(76, 0, 0x000000000101000000849e4d03fb88494082fa9a13671f3140, 0x00000000010100000048892c88879049400746fe96b2213140, 4, 5, 0),
(77, 0, 0x000000000101000000f5e0f0bde18849406aac5b52cdf93040, 0x000000000101000000171af37a8d8a4940ed0f95ec50f63040, 10, 1, 0),
(78, 0, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000b0ecd264f291494032f157d9fc053140, 8, 4, 0),
(79, 0, 0x0000000001010000008213af8f35974940eb899fbc9e273140, 0x0000000001010000001f72cd9cd88a4940d47251cca7223140, 6, 5, 0),
(80, 0, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000edc5c36c228c494012f9bb3db5153140, 7, 4, 0),
(81, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000003216a42412924940c519625652113140, 8, 3, 0),
(82, 0, 0x000000000101000000f3667e612c8e49401bc16ba18f033140, 0x000000000101000000a47377884c8e4940c880c60f86223140, 3, 2, 0),
(83, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000009da2f800c7874940f0fae8b055153140, 9, 3, 0),
(84, 0, 0x000000000101000000db18aa75388d494067675ff85c153140, 0x000000000101000000fbeafbf8b08f494005285d9c43023140, 2, 4, 0),
(85, 0, 0x000000000101000000ee36daebab8c494076cbbb2fcb253140, 0x0000000001010000005a9ee21eb592494098e48a28b0063140, 8, 2, 0),
(86, 0, 0x000000000101000000aa8f39bae3924940b39acbbf36223140, 0x0000000001010000002d0fbc5da38f4940b8a4f12b05f43040, 1, 2, 0),
(87, 0, 0x0000000001010000006ef34b5a9b9049408b291d352ff93040, 0x000000000101000000bcb4a632038c494022f35ca475123140, 3, 4, 0),
(88, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000001cde4e472d8e4940a746e091c8f63040, 7, 1, 0),
(89, 0, 0x0000000001010000009694885e95964940c08a0960cb273140, 0x000000000101000000f833f7ba8d92494058d041108a173140, 3, 5, 0),
(90, 0, 0x000000000101000000045036b5ee8e494070bdfe8aa2f93040, 0x000000000101000000d134801fc89349409e8a464b2f143140, 2, 5, 0),
(91, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000008a6b28877d8d4940e381b95698113140, 4, 2, 0),
(92, 0, 0x000000000101000000f0ac9316e29549401bc4abe03b053140, 0x0000000001010000000e7a295660894940d5b896cb4dfb3040, 7, 3, 0),
(93, 0, 0x000000000101000000f824e7717a9049407804885e64183140, 0x000000000101000000d20a630402974940e419baf18c033140, 6, 3, 0),
(94, 0, 0x00000000010100000000000000000000000000000000000000, 0x000000000101000000f5ff451a51884940157672de2e1e3140, 10, 1, 0),
(95, 0, 0x0000000001010000003bcf1680cd954940f4018961e8ff3040, 0x0000000001010000006f013a4ea98c494032c0483ee3153140, 5, 2, 0),
(96, 0, 0x000000000101000000adc7acd75a914940656e1e2cb2123140, 0x000000000101000000e836b7267b874940d0db8b2def113140, 3, 2, 0),
(97, 0, 0x0000000001010000001544bc0c338d4940c8fd606ceaed3040, 0x00000000010100000030fdc6a3e393494066b6bb6f740d3140, 1, 2, 0),
(98, 0, 0x000000000101000000961668364691494085b5ce9539013140, 0x000000000101000000a33cd7c74c9349402a6cc6c07df03040, 9, 4, 0),
(99, 0, 0x000000000101000000fc0a4c70e28749402bde60b08df43040, 0x0000000001010000004d365535918c4940bb74bff6eef83040, 7, 1, 0),
(100, 0, 0x0000000001010000009314a974ee8849402c80f26f2bfd3040, 0x0000000001010000006a60fc6f0d914940f427ce8faa1d3140, 3, 3, 0),
(101, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000000000000000000000000000000000, 3, 0, 0),
(102, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000000000000000000000000000000000, 3, 0, 0),
(103, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000000000000000000000000000000000, 3, 0, 0),
(104, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000000000000000000000000000000000, 3, 0, 0),
(105, 0, 0x00000000010100000000000000000000000000000000000000, 0x0000000001010000006666666666a649406666666666663140, 3, 0, 0),
(106, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000000000000000000000000000000000, 3, 0, 0),
(107, 0, 0x00000000010100000000000000000000000000000000000000, 0x00000000010100000000000000000000000000000000000000, 0, 0, 0);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `cuisines`
--

CREATE TABLE `cuisines` (
  `id` int(11) NOT NULL,
  `type` text NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `cuisines`
--

INSERT INTO `cuisines` (`id`, `type`) VALUES
(1, 'Gluten-Free'),
(2, 'Swiss'),
(3, 'Fusion'),
(4, 'Korean'),
(5, 'Filipino'),
(6, 'BBQ'),
(7, 'Bakery'),
(8, 'German'),
(9, 'Soul Food'),
(10, 'Tibetan'),
(11, 'Middle Eastern'),
(12, 'Peruvian'),
(13, 'Sri Lankan'),
(14, 'Deli'),
(15, 'Bistro'),
(16, 'Dutch'),
(17, 'Tex-Mex'),
(18, 'Mexican'),
(19, 'Moroccan'),
(20, 'Farm-to-Table'),
(21, 'Bulgarian'),
(22, 'Armenian'),
(23, 'Swedish'),
(24, 'Keto'),
(25, 'Tea House'),
(26, 'Street Food'),
(27, 'Smoothie Bar'),
(28, 'Serbian'),
(29, 'Brazilian'),
(30, 'Vegetarian'),
(31, 'Healthy'),
(32, 'Pakistani'),
(33, 'Coffee Shop'),
(34, 'Croatian'),
(35, 'Kazakh'),
(36, 'American'),
(37, 'Ethiopian'),
(38, 'Malaysian'),
(39, 'Slovak'),
(40, 'Gelateria'),
(41, 'Azerbaijani'),
(42, 'Juice Bar'),
(43, 'Slovenian'),
(44, 'Austrian'),
(45, 'Georgian'),
(46, 'Russian'),
(47, 'Organic'),
(48, 'Japanese'),
(49, 'African'),
(50, 'Indian'),
(51, 'Donut Shop'),
(52, 'Vegan'),
(53, 'Mediterranean'),
(54, 'Ice Cream Parlor'),
(55, 'Brasserie'),
(56, 'Sandwich Shop'),
(57, 'Czech'),
(58, 'Raw'),
(59, 'Uzbek'),
(60, 'Danish'),
(61, 'Seafood'),
(62, 'Norwegian'),
(63, 'Romanian'),
(64, 'Southern'),
(65, 'Australian'),
(66, 'Persian'),
(67, 'Italian'),
(68, 'Cuban'),
(69, 'Spanish'),
(70, 'Afghan'),
(71, 'Mongolian'),
(72, 'Hungarian'),
(73, 'Canadian'),
(74, 'Singaporean'),
(75, 'Gastropub'),
(76, 'Lebanese'),
(77, 'Bagel Shop'),
(78, 'Chinese'),
(79, 'Paleo'),
(80, 'Finnish'),
(81, 'Argentinian'),
(82, 'Fast Food'),
(83, 'Polish'),
(84, 'Chocolatier'),
(85, 'New Zealand'),
(86, 'Comfort Food'),
(87, 'Nepalese'),
(88, 'Creole'),
(89, 'Icelandic'),
(90, 'Caribbean'),
(91, 'Cajun'),
(92, 'Turkish'),
(93, 'Patisserie'),
(94, 'Bangladeshi'),
(95, 'Hawaiian'),
(96, 'Belgian'),
(97, 'Mexican-American'),
(98, 'Portuguese'),
(99, 'Thai'),
(100, 'Vietnamese');

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `cuisines_restaurants`
--

CREATE TABLE `cuisines_restaurants` (
  `id_restaurant` int(11) NOT NULL,
  `id_cuisine` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `cuisines_restaurants`
--

INSERT INTO `cuisines_restaurants` (`id_restaurant`, `id_cuisine`) VALUES
(1, 41),
(1, 16),
(2, 61),
(2, 99),
(2, 50),
(3, 63),
(3, 18),
(4, 44),
(4, 69),
(5, 96),
(5, 19),
(5, 1),
(6, 62),
(6, 13),
(6, 16),
(7, 81),
(7, 81),
(7, 94),
(8, 45),
(8, 73),
(8, 40),
(9, 52),
(9, 42),
(9, 91),
(10, 86),
(10, 52),
(10, 76),
(11, 97),
(12, 38),
(12, 43),
(12, 81),
(13, 87),
(13, 9),
(14, 80),
(14, 16),
(15, 49),
(16, 78),
(16, 56),
(16, 38),
(17, 45),
(17, 4),
(18, 31),
(18, 4),
(18, 98),
(19, 93),
(19, 79),
(20, 8),
(20, 91),
(21, 12),
(21, 49),
(22, 30),
(23, 52),
(23, 98),
(23, 91),
(24, 16),
(24, 92),
(24, 44),
(25, 76),
(25, 12),
(25, 5),
(26, 99),
(26, 56),
(27, 96),
(27, 34),
(28, 8),
(28, 21),
(29, 51),
(29, 48),
(29, 75),
(30, 36),
(30, 60),
(31, 51),
(32, 93),
(32, 70),
(32, 57),
(33, 20),
(33, 60),
(34, 100),
(34, 51),
(35, 60),
(35, 33),
(35, 39),
(36, 45),
(36, 96),
(37, 31),
(37, 84),
(38, 57),
(39, 16),
(39, 39),
(39, 67),
(40, 81),
(41, 32),
(41, 45),
(42, 48),
(42, 98),
(42, 50),
(43, 59),
(44, 6),
(44, 97),
(44, 31),
(45, 3),
(45, 53),
(45, 4),
(46, 30),
(46, 53),
(46, 98),
(47, 55),
(48, 10),
(48, 1),
(48, 94),
(49, 57),
(49, 7),
(50, 61),
(51, 2),
(52, 37),
(53, 51),
(53, 18),
(54, 4),
(54, 74),
(54, 29),
(55, 12),
(55, 39),
(55, 2),
(56, 38),
(56, 82),
(56, 73),
(57, 60),
(58, 73),
(59, 15),
(59, 35),
(60, 25),
(61, 53),
(62, 5),
(62, 80),
(63, 48),
(63, 60),
(63, 69),
(64, 91),
(64, 37),
(64, 23),
(65, 64),
(65, 15),
(66, 29),
(66, 41),
(67, 45),
(67, 96),
(67, 27),
(68, 5),
(68, 33),
(68, 21),
(69, 16),
(69, 92),
(69, 11),
(70, 99),
(70, 31),
(70, 98),
(71, 39),
(71, 52),
(71, 23),
(72, 35),
(72, 73),
(73, 64),
(74, 72),
(74, 77),
(74, 20),
(75, 1),
(75, 65),
(75, 37),
(76, 73),
(76, 38),
(77, 28),
(77, 57),
(78, 22),
(79, 47),
(79, 33),
(79, 1),
(80, 62),
(81, 16),
(81, 99),
(82, 68),
(83, 100),
(83, 36),
(84, 63),
(84, 8),
(84, 5),
(85, 92),
(86, 58),
(87, 96),
(87, 5),
(87, 76),
(88, 46),
(88, 32),
(89, 68),
(89, 5),
(89, 93),
(90, 74),
(90, 88),
(90, 33),
(91, 2),
(92, 32),
(92, 33),
(92, 68),
(93, 96),
(94, 88),
(95, 19),
(95, 77),
(95, 12),
(96, 92),
(96, 100),
(97, 93),
(97, 14),
(97, 17),
(98, 15),
(99, 65),
(100, 53),
(105, 2),
(105, 3),
(106, 4),
(106, 8),
(107, 2);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `dishes`
--

CREATE TABLE `dishes` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL,
  `calories` int(11) NOT NULL,
  `price` float NOT NULL,
  `weight` float NOT NULL,
  `vegetarian` tinyint(1) NOT NULL,
  `vegan` tinyint(1) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `dishes`
--

INSERT INTO `dishes` (`id`, `name`, `calories`, `price`, `weight`, `vegetarian`, `vegan`) VALUES
(1, 'Broiled Lamb Tostadas', 1334, 59.1, 266.8, 0, 0),
(2, 'Smoky BryndzovĂ© HaluĹˇky', 1783, 61.24, 356.6, 0, 0),
(3, 'Spicy Macaroni Salad', 633, 60.97, 126.6, 0, 0),
(4, 'Broiled Lamb Tagine', 1512, 31.29, 302.4, 0, 0),
(5, 'Crunchy Pork Belly', 1894, 31.83, 378.8, 1, 0),
(6, 'Steamed Chicken Cordon Bleu', 1385, 60.12, 277, 0, 0),
(7, 'Broiled Bruschetta', 1888, 69.6, 377.6, 0, 0),
(8, 'Sour Beef Wellington', 857, 45.15, 171.4, 0, 0),
(9, 'Chopped Truffles', 1535, 68.17, 307, 0, 0),
(10, 'Flaky Lamb Lasagna', 726, 42.15, 145.2, 0, 0),
(11, 'Roasted Stuffed Zucchini', 755, 43.36, 151, 0, 0),
(12, 'Blanched Lamb Bolognese', 1711, 61.78, 342.2, 0, 0),
(13, 'Air-fried Jerk Chicken', 1723, 64.36, 344.6, 0, 0),
(14, 'Rich Churros', 415, 66.25, 83, 0, 0),
(15, 'SautĂ©ed Lamb Quesadillas', 1810, 28.25, 362, 1, 0),
(16, 'Fiery Organic Salad', 359, 36.27, 71.8, 0, 0),
(17, 'Poached Moules Frites', 1526, 67.05, 305.2, 0, 0),
(18, 'Creamy Paella Valenciana', 1977, 33.46, 395.4, 0, 0),
(19, 'Blackened Potato Salad', 1752, 46.12, 350.4, 0, 0),
(20, 'Caramelized BryndzovĂ© HaluĹˇky', 685, 69.47, 137, 0, 0),
(21, 'Baked Beef Ragu', 1332, 40.82, 266.4, 0, 0),
(22, 'Creamy Apple Pie', 568, 46.43, 113.6, 0, 0),
(23, 'Baked Beef Tostadas', 1126, 56.17, 225.2, 0, 0),
(24, 'Funky Jambalaya', 663, 52.2, 132.6, 0, 0),
(25, 'Herbed Chicken Cordon Bleu', 1692, 25.74, 338.4, 1, 0),
(26, 'Crunchy Nicoise Salad', 569, 69.79, 113.8, 0, 0),
(27, 'Brined Cuban Sandwich', 1754, 58.89, 350.8, 0, 0),
(28, 'Boiled Bobotie', 1525, 29.59, 305, 0, 0),
(29, 'Peppery Philly Cheesesteak', 893, 32.3, 178.6, 0, 0),
(30, 'Piquant Pork Chili', 1269, 58.28, 253.8, 0, 0),
(31, 'Stir-fried Pork Lasagna', 928, 61.72, 185.6, 0, 0),
(32, 'Crunchy Shish Kebab', 720, 49.22, 144, 0, 0),
(33, 'Nutty Pork Goulash', 1493, 48.46, 298.6, 0, 0),
(34, 'Sweet Greek Salad', 1669, 27.71, 333.8, 0, 0),
(35, 'Duck Chicken Quesadillas', 675, 53.54, 135, 0, 0),
(36, 'Toasty Chicken Katsu', 1637, 27.22, 327.4, 0, 0),
(37, 'Seared Lamb Pot Roast', 990, 50.12, 198, 0, 0),
(38, 'Scallion Beef Stroganoff', 304, 53.25, 60.8, 0, 0),
(39, 'Rabbit Gnocchi', 1029, 55.25, 205.8, 0, 0),
(40, 'Yeasty Avocado Toast', 331, 31.11, 66.2, 0, 0),
(41, 'Woody BryndzovĂ© HaluĹˇky', 449, 49.07, 89.8, 0, 0),
(42, 'Succulent Lamb Pot Roast', 331, 59.79, 66.2, 0, 0),
(43, 'Stir-fried Hummus', 1269, 42.54, 253.8, 0, 0),
(44, 'Smoky Doro Wat', 1593, 44.72, 318.6, 0, 0),
(45, 'Peaty Lamb Kebabs', 1287, 46.98, 257.4, 0, 0),
(46, 'Sticky Egg Salad', 1214, 30.34, 242.8, 0, 0),
(47, 'Fruity Chicken Salad', 1846, 61.02, 369.2, 0, 0),
(48, 'Silky Clam Chowder', 500, 53.1, 100, 0, 0),
(49, 'Velvety Philly Cheesesteak', 1106, 49.25, 221.2, 0, 0),
(50, 'Spiced Chicken Fajitas', 476, 39.24, 95.2, 0, 0),
(51, 'Peaty Vegan Tacos', 761, 61.08, 152.2, 0, 0),
(52, 'Blended Fettuccine Alfredo', 1156, 32.5, 231.2, 0, 0),
(53, 'Coriander Chicken Chili', 1594, 50.94, 318.8, 0, 0),
(54, 'Chewy Lamb Lasagna', 1217, 59.41, 243.4, 0, 0),
(55, 'Smoked Lamb Curry', 1952, 32.06, 390.4, 0, 0),
(56, 'Zesty Antipasto', 1143, 28, 228.6, 0, 0),
(57, 'Flaky Bibimbap', 1438, 49.74, 287.6, 0, 0),
(58, 'Buttery Tabbouleh', 1038, 42.84, 207.6, 0, 0),
(59, 'Umami Kofta', 1070, 46.55, 214, 1, 1),
(60, 'Broiled Chef Salad', 383, 38.51, 76.6, 1, 0),
(61, 'Dry Matcha Latte', 1946, 68.66, 389.2, 0, 0),
(62, 'Deep-fried Jerk Chicken', 1351, 31.89, 270.2, 0, 0),
(63, 'Gooey Nicoise Salad', 1849, 37.23, 369.8, 0, 0),
(64, 'Braised Beef Tamales', 813, 51.09, 162.6, 0, 0),
(65, 'Fruity Pork Tonkatsu', 858, 29.82, 171.6, 0, 0),
(66, 'Zesty Chicken Alfredo', 1542, 56.09, 308.4, 0, 0),
(67, 'Grilled Monte Cristo', 1556, 60.32, 311.2, 0, 0),
(68, 'Duck Chicken Alfredo', 766, 50.82, 153.2, 0, 0),
(69, 'Pickled Philly Cheesesteak', 1882, 45.41, 376.4, 0, 0),
(70, 'Caramelized Pork Chops', 1599, 68.95, 319.8, 1, 0),
(71, 'Air-fried Fondue', 1289, 49, 257.8, 0, 0),
(72, 'Mellow Chicken Lasagna', 1395, 52.28, 279, 0, 0),
(73, 'Wrapped French Dip', 1995, 55.08, 399, 0, 0),
(74, 'Charred Donuts', 1196, 40.43, 239.2, 0, 0),
(75, 'Rich Pork Ribs', 893, 41.95, 178.6, 0, 0),
(76, 'Fermented Beef Burritos', 1900, 35.56, 380, 0, 0),
(77, 'Sugared Lamb Rogan Josh', 1434, 55.25, 286.8, 0, 0),
(78, 'Berry Beef Enchiladas', 1292, 60.31, 258.4, 0, 0),
(79, 'Boiled Rogan Josh', 1450, 47.92, 290, 1, 0),
(80, 'Seared Risotto', 1878, 33.81, 375.6, 0, 0),
(81, 'Sugared Caprese Salad', 1049, 30.94, 209.8, 0, 0),
(82, 'Pickled Yakitori', 840, 56.63, 168, 0, 0),
(83, 'Seared Tuna Salad', 923, 34.07, 184.6, 0, 0),
(84, 'Crispy Beef Empanadas', 1774, 69.52, 354.8, 0, 0),
(85, 'Charred Cheesecake', 442, 29.72, 88.4, 0, 0),
(86, 'Tangy Panzanella', 1600, 62.78, 320, 0, 0),
(87, 'Diced Mac and Cheese', 634, 48.46, 126.8, 0, 0),
(88, 'Horseradish Stroopwafel', 1554, 47.23, 310.8, 0, 0),
(89, 'Boiled Chicken Pho', 965, 46.69, 193, 0, 0),
(90, 'Umami Lamb Empanadas', 480, 66.27, 96, 0, 0),
(91, 'Rosemary Dal Makhani', 1716, 50.77, 343.2, 0, 0),
(92, 'Crunchy Biryani', 1748, 68.93, 349.6, 0, 0),
(93, 'Tangy Greek Salad', 516, 30.98, 103.2, 0, 0),
(94, 'Spicy Fondue', 847, 29.79, 169.4, 0, 0),
(95, 'Braised Fondue', 474, 45.3, 94.8, 0, 0),
(96, 'Bitter Beef Brisket', 739, 36.95, 147.8, 0, 0),
(97, 'Sour Stuffed Peppers', 1771, 57.5, 354.2, 0, 0),
(98, 'Steamed Nasi Goreng', 656, 41.24, 131.2, 0, 0),
(99, 'Silky Lamb Rogan Josh', 1969, 63.64, 393.8, 0, 0),
(100, 'Pureed Shish Kebab', 379, 55.76, 75.8, 0, 0),
(101, 'Pierogi', 200, 34, 345, 1, 1),
(102, 'Pierogi', 200, 34, 345, 1, 1),
(103, 'Pierogi', 200, 34, 345, 0, 0),
(104, 'Pierogi Ruskie', 200, 34, 345, 0, 0);

-- --------------------------------------------------------

--
-- Zastąpiona struktura widoku `dishes_info`
-- (See below for the actual view)
--
CREATE TABLE `dishes_info` (
`id` int(11)
,`name` text
,`calories` int(11)
,`price` float
,`weight` float
,`ingredient_names` mediumtext
,`res_id` int(11)
);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `hours`
--

CREATE TABLE `hours` (
  `id` int(11) NOT NULL,
  `id_restaurant` int(11) NOT NULL,
  `mon` varchar(11) DEFAULT 'closed',
  `tue` varchar(11) DEFAULT 'closed',
  `wed` varchar(11) DEFAULT 'closed',
  `thu` varchar(11) DEFAULT 'closed',
  `fri` varchar(11) DEFAULT 'closed',
  `sat` varchar(11) DEFAULT 'closed',
  `sun` varchar(11) DEFAULT 'closed',
  `special` longtext CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL CHECK (json_valid(`special`)),
  `updated_by` int(11) NOT NULL,
  `verified_by` int(11) NOT NULL,
  `verified` tinyint(1) NOT NULL,
  `id_ref` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `hours`
--

INSERT INTO `hours` (`id`, `id_restaurant`, `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, `sun`, `special`, `updated_by`, `verified_by`, `verified`, `id_ref`) VALUES
(1, 1, '08:00-18:00', '09:00-18:00', '08:00-19:00', '07:00-19:00', '10:00-18:00', '09:00-19:00', '06:00-21:00', '{\"24.06.2025\":\"closed\",\"10.08.2025\":\"07:00-16:00\",\"29.05.2025\":\"10:00-15:00\",\"04.03.2025\":\"08:00-13:00\",\"26.03.2025\":\"closed\"}', 0, 0, 1, 0),
(2, 2, '07:00-17:00', '09:00-20:00', '10:00-17:00', '08:00-22:00', '06:00-19:00', '06:00-23:00', '09:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(3, 3, '07:00-23:00', '09:00-17:00', '08:00-17:00', '09:00-21:00', '07:00-23:00', '09:00-20:00', '08:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(4, 4, '09:00-17:00', '06:00-19:00', '09:00-23:00', '07:00-20:00', '08:00-18:00', '09:00-21:00', '09:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(5, 5, '09:00-22:00', '07:00-22:00', '09:00-23:00', '10:00-19:00', '08:00-21:00', '07:00-23:00', '07:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(6, 6, '06:00-20:00', '06:00-21:00', '08:00-19:00', '07:00-23:00', '06:00-21:00', '09:00-18:00', '10:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(7, 7, '08:00-20:00', '07:00-20:00', '08:00-22:00', '07:00-17:00', '06:00-23:00', '06:00-18:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(8, 8, '08:00-18:00', '06:00-19:00', '08:00-23:00', '06:00-19:00', '07:00-22:00', '10:00-17:00', '08:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(9, 9, '07:00-21:00', '10:00-17:00', '10:00-23:00', '07:00-19:00', '09:00-22:00', '09:00-19:00', '08:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(10, 10, '08:00-18:00', '06:00-20:00', '09:00-17:00', '06:00-17:00', '09:00-18:00', '10:00-22:00', '10:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(11, 11, '07:00-23:00', '09:00-20:00', '07:00-19:00', '08:00-21:00', '07:00-21:00', '09:00-19:00', '09:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(12, 12, '10:00-17:00', '06:00-19:00', '09:00-20:00', '08:00-17:00', '10:00-23:00', '10:00-22:00', '06:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(13, 13, '08:00-20:00', '10:00-22:00', '06:00-23:00', '06:00-20:00', '10:00-17:00', '06:00-23:00', '08:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(14, 14, '08:00-20:00', '06:00-17:00', '09:00-23:00', '09:00-23:00', '08:00-21:00', '07:00-22:00', '06:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(15, 15, '06:00-20:00', '09:00-17:00', '10:00-18:00', '09:00-21:00', '09:00-22:00', '06:00-22:00', '09:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(16, 16, '10:00-23:00', '06:00-20:00', '10:00-22:00', '09:00-21:00', '09:00-19:00', '10:00-20:00', '10:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(17, 17, '06:00-20:00', '06:00-17:00', '07:00-17:00', '09:00-17:00', '09:00-21:00', '09:00-20:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(18, 18, '07:00-22:00', '10:00-20:00', '09:00-21:00', '06:00-21:00', '09:00-22:00', '06:00-20:00', '07:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(19, 19, '08:00-19:00', '09:00-20:00', '06:00-21:00', '10:00-22:00', '07:00-22:00', '07:00-23:00', '08:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(20, 20, '07:00-17:00', '08:00-22:00', '09:00-18:00', '07:00-18:00', '07:00-22:00', '07:00-22:00', '07:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(21, 21, '08:00-21:00', '09:00-22:00', '06:00-17:00', '07:00-17:00', '07:00-18:00', '07:00-22:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(22, 22, '06:00-22:00', '10:00-23:00', '08:00-18:00', '06:00-21:00', '06:00-17:00', '10:00-20:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(23, 23, '07:00-18:00', '08:00-17:00', '07:00-19:00', '08:00-23:00', '09:00-23:00', '07:00-23:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(24, 24, '07:00-18:00', '06:00-19:00', '07:00-17:00', '10:00-18:00', '08:00-19:00', '07:00-18:00', '08:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(25, 25, '09:00-23:00', '06:00-20:00', '08:00-17:00', '06:00-21:00', '09:00-21:00', '09:00-20:00', '09:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(26, 26, '06:00-20:00', '10:00-22:00', '07:00-20:00', '10:00-21:00', '09:00-17:00', '06:00-20:00', '08:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(27, 27, '10:00-21:00', '10:00-23:00', '07:00-17:00', '08:00-20:00', '07:00-19:00', '09:00-19:00', '06:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(28, 28, '07:00-23:00', '06:00-23:00', '07:00-18:00', '09:00-18:00', '07:00-19:00', '09:00-20:00', '07:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(29, 29, '10:00-19:00', '07:00-23:00', '08:00-20:00', '08:00-22:00', '10:00-17:00', '09:00-18:00', '08:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(30, 30, '10:00-17:00', '09:00-17:00', '09:00-23:00', '09:00-21:00', '10:00-23:00', '06:00-21:00', '10:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(31, 31, '10:00-21:00', '10:00-18:00', '07:00-21:00', '09:00-17:00', '09:00-22:00', '10:00-22:00', '09:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(32, 32, '06:00-20:00', '08:00-17:00', '09:00-17:00', '08:00-23:00', '08:00-21:00', '07:00-18:00', '10:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(33, 33, '09:00-21:00', '08:00-23:00', '07:00-21:00', '06:00-18:00', '08:00-19:00', '06:00-22:00', '07:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(34, 34, '09:00-22:00', '10:00-23:00', '10:00-17:00', '06:00-23:00', '08:00-20:00', '07:00-23:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(35, 35, '07:00-21:00', '06:00-17:00', '08:00-17:00', '06:00-18:00', '10:00-19:00', '10:00-18:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(36, 36, '06:00-17:00', '08:00-20:00', '07:00-23:00', '06:00-18:00', '06:00-19:00', '09:00-20:00', '08:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(37, 37, '10:00-21:00', '07:00-23:00', '09:00-20:00', '07:00-22:00', '07:00-23:00', '07:00-21:00', '06:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(38, 38, '06:00-23:00', '09:00-21:00', '06:00-17:00', '07:00-21:00', '07:00-20:00', '08:00-19:00', '09:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(39, 39, '08:00-20:00', '06:00-22:00', '06:00-18:00', '06:00-23:00', '10:00-18:00', '08:00-21:00', '06:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(40, 40, '10:00-20:00', '06:00-21:00', '10:00-18:00', '09:00-17:00', '07:00-22:00', '06:00-18:00', '07:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(41, 41, '07:00-17:00', '08:00-23:00', '09:00-21:00', '07:00-23:00', '08:00-18:00', '09:00-19:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(42, 42, '09:00-18:00', '10:00-20:00', '08:00-20:00', '06:00-18:00', '09:00-18:00', '10:00-18:00', '07:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(43, 43, '07:00-22:00', '10:00-23:00', '08:00-23:00', '06:00-17:00', '08:00-17:00', '06:00-23:00', '08:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(44, 44, '09:00-19:00', '07:00-17:00', '06:00-22:00', '07:00-20:00', '06:00-18:00', '08:00-18:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(45, 45, '10:00-21:00', '10:00-21:00', '06:00-21:00', '09:00-17:00', '08:00-18:00', '09:00-21:00', '08:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(46, 46, '10:00-23:00', '06:00-23:00', '06:00-21:00', '10:00-20:00', '08:00-23:00', '06:00-23:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(47, 47, '09:00-23:00', '06:00-22:00', '10:00-18:00', '06:00-18:00', '10:00-17:00', '07:00-22:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(48, 48, '08:00-22:00', '07:00-22:00', '07:00-21:00', '07:00-20:00', '06:00-19:00', '10:00-22:00', '08:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(49, 49, '10:00-21:00', '09:00-17:00', '08:00-22:00', '09:00-17:00', '09:00-23:00', '06:00-18:00', '07:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(50, 50, '09:00-22:00', '06:00-20:00', '08:00-21:00', '08:00-23:00', '08:00-20:00', '09:00-23:00', '08:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(51, 51, '10:00-17:00', '08:00-22:00', '07:00-22:00', '10:00-19:00', '10:00-19:00', '08:00-18:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(52, 52, '10:00-17:00', '07:00-21:00', '08:00-19:00', '08:00-20:00', '10:00-23:00', '06:00-18:00', '07:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(53, 53, '07:00-22:00', '06:00-21:00', '08:00-22:00', '07:00-18:00', '10:00-22:00', '06:00-21:00', '08:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(54, 54, '07:00-22:00', '06:00-18:00', '08:00-22:00', '07:00-21:00', '07:00-20:00', '08:00-20:00', '08:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(55, 55, '09:00-17:00', '09:00-17:00', '09:00-17:00', '10:00-17:00', '07:00-21:00', '06:00-18:00', '09:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(56, 56, '09:00-18:00', '07:00-18:00', '09:00-19:00', '06:00-19:00', '09:00-20:00', '08:00-20:00', '10:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(57, 57, '09:00-20:00', '09:00-17:00', '06:00-22:00', '09:00-18:00', '09:00-17:00', '08:00-21:00', '06:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(58, 58, '06:00-19:00', '10:00-20:00', '09:00-22:00', '06:00-19:00', '09:00-17:00', '06:00-20:00', '10:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(59, 59, '07:00-22:00', '09:00-20:00', '10:00-18:00', '10:00-17:00', '06:00-19:00', '10:00-20:00', '07:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(60, 60, '08:00-21:00', '10:00-17:00', '08:00-19:00', '08:00-23:00', '07:00-18:00', '09:00-22:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(61, 61, '10:00-18:00', '06:00-21:00', '07:00-20:00', '06:00-19:00', '07:00-17:00', '07:00-20:00', '10:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(62, 62, '07:00-19:00', '06:00-18:00', '07:00-23:00', '09:00-17:00', '07:00-22:00', '10:00-18:00', '07:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(63, 63, '07:00-19:00', '07:00-20:00', '06:00-18:00', '08:00-23:00', '06:00-22:00', '09:00-17:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(64, 64, '10:00-19:00', '06:00-22:00', '06:00-21:00', '10:00-21:00', '07:00-17:00', '07:00-20:00', '07:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(65, 65, '09:00-19:00', '08:00-17:00', '10:00-17:00', '08:00-23:00', '06:00-20:00', '06:00-23:00', '06:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(66, 66, '07:00-18:00', '07:00-19:00', '10:00-19:00', '07:00-19:00', '09:00-21:00', '07:00-19:00', '09:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(67, 67, '09:00-23:00', '07:00-18:00', '07:00-22:00', '10:00-19:00', '10:00-21:00', '09:00-19:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(68, 68, '08:00-18:00', '09:00-21:00', '09:00-22:00', '08:00-23:00', '06:00-17:00', '07:00-19:00', '09:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(69, 69, '07:00-20:00', '09:00-20:00', '09:00-23:00', '08:00-22:00', '08:00-21:00', '07:00-21:00', '07:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(70, 70, '07:00-23:00', '06:00-19:00', '09:00-21:00', '06:00-23:00', '09:00-20:00', '07:00-20:00', '06:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(71, 71, '06:00-21:00', '10:00-19:00', '07:00-21:00', '08:00-20:00', '08:00-22:00', '06:00-22:00', '07:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(72, 72, '06:00-20:00', '10:00-22:00', '06:00-21:00', '09:00-18:00', '07:00-22:00', '08:00-17:00', '10:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(73, 73, '08:00-17:00', '08:00-19:00', '09:00-20:00', '07:00-19:00', '06:00-20:00', '09:00-19:00', '08:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(74, 74, '06:00-18:00', '08:00-23:00', '10:00-22:00', '10:00-22:00', '10:00-21:00', '06:00-22:00', '10:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(75, 75, '07:00-19:00', '09:00-17:00', '07:00-19:00', '09:00-17:00', '08:00-22:00', '09:00-20:00', '09:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(76, 76, '09:00-22:00', '07:00-20:00', '06:00-18:00', '06:00-18:00', '07:00-22:00', '09:00-20:00', '06:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(77, 77, '10:00-20:00', '06:00-20:00', '06:00-21:00', '08:00-18:00', '06:00-19:00', '06:00-20:00', '07:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(78, 78, '07:00-23:00', '08:00-21:00', '08:00-22:00', '08:00-20:00', '06:00-22:00', '09:00-18:00', '06:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(79, 79, '07:00-23:00', '08:00-17:00', '09:00-17:00', '08:00-20:00', '08:00-22:00', '08:00-21:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(80, 80, '09:00-19:00', '07:00-19:00', '08:00-17:00', '06:00-20:00', '08:00-22:00', '08:00-20:00', '09:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(81, 81, '08:00-21:00', '10:00-23:00', '09:00-23:00', '10:00-20:00', '09:00-17:00', '06:00-23:00', '06:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(82, 82, '07:00-19:00', '07:00-23:00', '10:00-20:00', '09:00-17:00', '07:00-17:00', '07:00-22:00', '10:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(83, 83, '10:00-22:00', '06:00-17:00', '10:00-21:00', '06:00-23:00', '06:00-22:00', '06:00-23:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(84, 84, '10:00-17:00', '06:00-22:00', '09:00-22:00', '09:00-20:00', '09:00-22:00', '07:00-22:00', '09:00-18:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(85, 85, '07:00-19:00', '06:00-23:00', '10:00-20:00', '08:00-17:00', '09:00-18:00', '09:00-20:00', '08:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(86, 86, '10:00-17:00', '09:00-17:00', '10:00-20:00', '08:00-20:00', '07:00-18:00', '09:00-19:00', '06:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(87, 87, '06:00-17:00', '06:00-20:00', '06:00-23:00', '06:00-23:00', '08:00-23:00', '10:00-21:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(88, 88, '10:00-22:00', '10:00-20:00', '06:00-22:00', '10:00-21:00', '10:00-18:00', '06:00-21:00', '09:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(89, 89, '10:00-17:00', '06:00-22:00', '10:00-19:00', '08:00-18:00', '07:00-18:00', '07:00-23:00', '08:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(90, 90, '07:00-23:00', '09:00-23:00', '07:00-17:00', '06:00-18:00', '09:00-20:00', '09:00-18:00', '09:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(91, 91, '06:00-18:00', '08:00-22:00', '07:00-21:00', '09:00-18:00', '08:00-21:00', '06:00-19:00', '10:00-17:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(92, 92, '10:00-22:00', '10:00-23:00', '06:00-23:00', '07:00-19:00', '09:00-21:00', '09:00-17:00', '10:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(93, 93, '07:00-17:00', '06:00-19:00', '09:00-20:00', '08:00-19:00', '08:00-22:00', '10:00-23:00', '06:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(94, 94, '10:00-19:00', '07:00-22:00', '06:00-22:00', '06:00-20:00', '07:00-17:00', '10:00-19:00', '09:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(95, 95, '06:00-20:00', '09:00-22:00', '07:00-18:00', '08:00-17:00', '06:00-18:00', '10:00-17:00', '08:00-23:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(96, 96, '08:00-20:00', '09:00-19:00', '09:00-18:00', '09:00-19:00', '06:00-22:00', '09:00-22:00', '09:00-21:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(97, 97, '10:00-18:00', '10:00-21:00', '09:00-18:00', '10:00-18:00', '07:00-21:00', '07:00-18:00', '06:00-19:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(98, 98, '07:00-20:00', '08:00-20:00', '08:00-17:00', '06:00-17:00', '06:00-23:00', '10:00-18:00', '06:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(99, 99, '09:00-19:00', '10:00-18:00', '08:00-18:00', '10:00-21:00', '08:00-17:00', '06:00-22:00', '07:00-22:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(100, 100, '07:00-18:00', '10:00-23:00', '10:00-21:00', '08:00-18:00', '08:00-21:00', '09:00-23:00', '10:00-20:00', '{\"24.06.2025\": \"closed\", \"25.06.2025\": \"08:00-18:00\"}', 0, 0, 1, 0),
(101, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0),
(102, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0),
(103, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0),
(104, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0),
(105, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0),
(106, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0),
(107, 0, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `ingredients`
--

CREATE TABLE `ingredients` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL,
  `vegetarian` tinyint(1) NOT NULL,
  `vegan` tinyint(1) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `ingredients`
--

INSERT INTO `ingredients` (`id`, `name`, `vegetarian`, `vegan`) VALUES
(1, 'Dry Roasted Peanuts', 0, 0),
(2, 'Tabasco Sauce', 0, 0),
(3, 'Goat Cheese', 1, 1),
(4, 'Ground Cinnamon', 0, 0),
(5, 'Carrots', 1, 0),
(6, 'Avocado', 1, 0),
(7, 'Fresh Dill', 1, 1),
(8, 'Coconut Milk', 1, 1),
(9, 'Russet Potatoes', 1, 0),
(10, 'Cauliflower Florets', 0, 0),
(11, 'Mozzarella Cheese', 1, 1),
(12, 'Tomato Paste', 0, 0),
(13, 'Green Beans', 0, 0),
(14, 'Sweet Potatoes', 1, 1),
(15, 'Macaroni', 0, 0),
(16, 'Canned Black Beans', 0, 0),
(17, 'Jasmine Rice', 0, 0),
(18, 'Shallots', 1, 1),
(19, 'Poblano Peppers', 1, 0),
(20, 'Soybean Paste', 1, 0),
(21, 'Curly Kale', 0, 0),
(22, 'Lime Juice', 0, 0),
(23, 'Feta Cheese', 1, 0),
(24, 'Peanut Butter', 0, 0),
(25, 'Rice Noodles', 0, 0),
(26, 'Cheddar Cheese', 1, 1),
(27, 'Ground Turkey', 0, 0),
(28, 'Aioli', 0, 0),
(29, 'Egg Noodles', 1, 0),
(30, 'Shelled Pistachios', 0, 0),
(31, 'Steak', 0, 0),
(32, 'Baby Corn', 0, 0),
(33, 'Cannellini Beans', 0, 0),
(34, 'Green Cabbage', 1, 0),
(35, 'Peanuts', 0, 0),
(36, 'Chicken Drumsticks', 1, 1),
(37, 'Rutabaga', 0, 0),
(38, 'Basmati Rice', 1, 1),
(39, 'Baby Carrots', 1, 1),
(40, 'Pasta', 0, 0),
(41, 'Dried Raspberries', 1, 1),
(42, 'Chia Seed', 1, 0),
(43, 'Tenderloin', 0, 0),
(44, 'Japanese Eggplant', 0, 0),
(45, 'Beef Broth', 1, 1),
(46, 'Leeks', 1, 1),
(47, 'Ground Fenugreek', 1, 1),
(48, 'Tomato', 1, 0),
(49, 'Scallions', 1, 0),
(50, 'Canned Cannellini Beans', 1, 1),
(51, 'Cremini Mushrooms', 0, 0),
(52, 'Granulated Sugar', 1, 1),
(53, 'Blanched Almonds', 0, 0),
(54, 'Split Peas', 0, 0),
(55, 'Spaghetti', 1, 0),
(56, 'Fingerling Potatoes', 0, 0),
(57, 'Jalapeno Peppers', 1, 1),
(58, 'Cumin', 0, 0),
(59, 'Whole Wheat Bread', 0, 0),
(60, 'Fresh Rosemary', 1, 1),
(61, 'Watercress', 1, 0),
(62, 'Culantro', 1, 1),
(63, 'Avocado Oil', 1, 0),
(64, 'Whole Cloves', 0, 0),
(65, 'Frozen Mango', 0, 0),
(66, 'Caraway Seed', 1, 0),
(67, 'Potatoes', 0, 0),
(68, 'Celery Seed', 0, 0),
(69, 'Butter Lettuce', 1, 1),
(70, 'Vinegar', 1, 1),
(71, 'Papaya Cubes', 0, 0),
(72, 'Snow Peas', 1, 0),
(73, 'Minced Garlic', 1, 0),
(74, 'Yellow Onion', 0, 0),
(75, 'Worcestershire Sauce', 1, 1),
(76, 'Yellow Onions', 0, 0),
(77, 'Fresh Mint', 1, 1),
(78, 'Sour Cream', 0, 0),
(79, 'Parsnips', 0, 0),
(80, 'Almond Butter', 1, 0),
(81, 'Chicken Thighs', 1, 1),
(82, 'White Rice', 1, 1),
(83, 'Cod', 1, 0),
(84, 'Canned Kidney Beans', 1, 0),
(85, 'Raw Almonds', 0, 0),
(86, 'Chorizo', 0, 0),
(87, 'Pearl Couscous', 0, 0),
(88, 'test1', 0, 0),
(89, 'test1', 0, 0),
(90, 'test1', 0, 0),
(91, 'test2', 0, 0),
(92, 'test3', 0, 0),
(93, 'test1', 0, 0),
(94, 'test2', 0, 0),
(95, 'test3', 0, 0),
(96, 'test4', 1, 1),
(97, 'test4', 1, 1),
(98, 'test4', 1, 1),
(99, 'test4', 1, 1),
(100, 'test4', 1, 1);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `ingredients_dishes`
--

CREATE TABLE `ingredients_dishes` (
  `id_ingredient` int(11) NOT NULL,
  `id_dish` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `ingredients_dishes`
--

INSERT INTO `ingredients_dishes` (`id_ingredient`, `id_dish`) VALUES
(72, 1),
(30, 1),
(58, 1),
(94, 1),
(8, 1),
(20, 2),
(38, 2),
(78, 2),
(62, 2),
(100, 3),
(36, 3),
(49, 3),
(74, 3),
(72, 3),
(57, 4),
(11, 4),
(68, 4),
(56, 4),
(38, 4),
(48, 5),
(81, 5),
(49, 5),
(1, 6),
(81, 6),
(66, 6),
(12, 7),
(85, 7),
(28, 7),
(67, 7),
(90, 7),
(59, 8),
(2, 8),
(35, 8),
(92, 8),
(49, 8),
(66, 8),
(95, 9),
(38, 9),
(27, 9),
(51, 9),
(54, 9),
(81, 10),
(21, 10),
(98, 10),
(16, 11),
(25, 11),
(46, 11),
(39, 11),
(41, 12),
(54, 12),
(72, 12),
(4, 12),
(38, 12),
(95, 12),
(11, 13),
(52, 13),
(97, 13),
(85, 13),
(5, 13),
(57, 13),
(66, 14),
(69, 14),
(95, 14),
(3, 14),
(77, 15),
(61, 15),
(97, 15),
(87, 16),
(6, 16),
(88, 16),
(56, 16),
(68, 16),
(42, 16),
(2, 17),
(62, 17),
(82, 17),
(30, 17),
(31, 17),
(76, 18),
(55, 18),
(40, 18),
(23, 19),
(89, 19),
(82, 19),
(1, 20),
(46, 20),
(29, 20),
(72, 20),
(72, 20),
(91, 21),
(99, 21),
(79, 21),
(33, 21),
(38, 21),
(12, 22),
(39, 22),
(41, 22),
(97, 23),
(64, 23),
(49, 23),
(24, 24),
(93, 24),
(3, 24),
(24, 24),
(35, 24),
(55, 24),
(9, 25),
(50, 25),
(42, 25),
(96, 25),
(66, 25),
(16, 26),
(73, 26),
(76, 26),
(65, 26),
(72, 26),
(86, 27),
(34, 27),
(19, 27),
(59, 28),
(2, 28),
(100, 28),
(6, 28),
(55, 28),
(18, 28),
(51, 29),
(4, 29),
(23, 29),
(38, 29),
(46, 30),
(53, 30),
(18, 30),
(12, 30),
(86, 31),
(89, 31),
(32, 31),
(48, 32),
(99, 32),
(61, 32),
(79, 32),
(5, 32),
(2, 32),
(31, 33),
(36, 33),
(61, 33),
(74, 34),
(80, 34),
(59, 34),
(37, 34),
(3, 35),
(92, 35),
(98, 35),
(43, 36),
(25, 36),
(68, 36),
(25, 36),
(44, 37),
(93, 37),
(11, 37),
(73, 37),
(71, 38),
(24, 38),
(84, 38),
(98, 38),
(27, 38),
(78, 39),
(30, 39),
(19, 39),
(26, 39),
(38, 40),
(70, 40),
(13, 40),
(52, 40),
(79, 40),
(69, 41),
(28, 41),
(16, 41),
(22, 42),
(65, 42),
(37, 42),
(89, 43),
(83, 43),
(75, 43),
(1, 44),
(98, 44),
(70, 44),
(64, 45),
(100, 45),
(98, 45),
(40, 45),
(39, 46),
(17, 46),
(50, 46),
(95, 46),
(93, 46),
(26, 46),
(41, 47),
(97, 47),
(2, 47),
(90, 47),
(43, 47),
(26, 47),
(79, 48),
(83, 48),
(33, 48),
(46, 48),
(14, 48),
(25, 48),
(34, 49),
(87, 49),
(65, 49),
(29, 49),
(86, 49),
(27, 49),
(66, 50),
(61, 50),
(26, 50),
(64, 50),
(23, 50),
(75, 50),
(69, 51),
(49, 51),
(27, 51),
(67, 52),
(83, 52),
(51, 52),
(96, 52),
(70, 52),
(83, 52),
(14, 53),
(59, 53),
(93, 53),
(98, 54),
(13, 54),
(44, 54),
(10, 55),
(54, 55),
(95, 55),
(89, 55),
(62, 55),
(66, 55),
(65, 56),
(30, 56),
(78, 56),
(68, 57),
(97, 57),
(93, 57),
(87, 57),
(55, 57),
(40, 57),
(10, 58),
(27, 58),
(47, 58),
(92, 58),
(87, 58),
(31, 58),
(47, 59),
(82, 59),
(70, 59),
(3, 60),
(61, 60),
(70, 60),
(23, 61),
(83, 61),
(13, 61),
(87, 61),
(100, 62),
(32, 62),
(93, 62),
(75, 62),
(24, 62),
(49, 63),
(72, 63),
(53, 63),
(55, 63),
(57, 63),
(49, 63),
(39, 64),
(31, 64),
(49, 64),
(33, 64),
(68, 64),
(100, 65),
(51, 65),
(85, 65),
(99, 65),
(81, 65),
(16, 65),
(94, 66),
(49, 66),
(84, 66),
(76, 67),
(67, 67),
(8, 67),
(29, 68),
(48, 68),
(58, 68),
(18, 68),
(44, 68),
(67, 68),
(85, 69),
(84, 69),
(25, 69),
(88, 69),
(46, 70),
(3, 70),
(100, 70),
(19, 70),
(5, 71),
(84, 71),
(54, 71),
(100, 72),
(49, 72),
(97, 72),
(92, 72),
(97, 73),
(1, 73),
(35, 73),
(48, 73),
(88, 74),
(10, 74),
(72, 74),
(74, 74),
(74, 74),
(19, 74),
(97, 75),
(96, 75),
(40, 75),
(8, 75),
(99, 75),
(50, 76),
(64, 76),
(41, 76),
(5, 76),
(86, 77),
(62, 77),
(1, 77),
(57, 77),
(31, 78),
(47, 78),
(13, 78),
(62, 78),
(81, 78),
(49, 79),
(36, 79),
(80, 79),
(70, 79),
(9, 79),
(20, 79),
(99, 80),
(38, 80),
(12, 80),
(57, 81),
(86, 81),
(91, 81),
(83, 81),
(39, 81),
(71, 82),
(21, 82),
(62, 82),
(48, 82),
(58, 82),
(25, 82),
(64, 83),
(37, 83),
(52, 83),
(11, 84),
(71, 84),
(99, 84),
(41, 84),
(54, 84),
(61, 84),
(64, 85),
(56, 85),
(90, 85),
(13, 86),
(56, 86),
(87, 86),
(64, 86),
(2, 86),
(56, 86),
(20, 87),
(65, 87),
(38, 87),
(62, 87),
(79, 87),
(67, 87),
(63, 88),
(1, 88),
(45, 88),
(45, 88),
(66, 89),
(22, 89),
(56, 89),
(59, 89),
(51, 90),
(22, 90),
(34, 90),
(29, 91),
(94, 91),
(61, 91),
(23, 92),
(7, 92),
(98, 92),
(90, 92),
(48, 92),
(78, 93),
(97, 93),
(45, 93),
(19, 94),
(39, 94),
(86, 94),
(61, 94),
(83, 94),
(93, 95),
(88, 95),
(51, 95),
(41, 95),
(53, 96),
(13, 96),
(57, 96),
(14, 96),
(41, 97),
(97, 97),
(22, 97),
(19, 97),
(33, 98),
(77, 98),
(36, 98),
(71, 98),
(66, 98),
(71, 99),
(91, 99),
(24, 99),
(10, 99),
(63, 99),
(43, 100),
(71, 100),
(3, 100),
(90, 103),
(91, 103),
(92, 103),
(93, 104),
(94, 104),
(95, 104);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `restaurants`
--

CREATE TABLE `restaurants` (
  `id` int(11) NOT NULL,
  `name` text NOT NULL,
  `opinion` float NOT NULL,
  `verified` tinyint(1) NOT NULL,
  `address` text NOT NULL,
  `updated_by` int(11) NOT NULL,
  `verified_by` int(11) NOT NULL,
  `deleted` tinyint(1) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `restaurants`
--

INSERT INTO `restaurants` (`id`, `name`, `opinion`, `verified`, `address`, `updated_by`, `verified_by`, `deleted`) VALUES
(1, 'Savvy Espresso', 0, 1, 'st. Karkonoska 75, Wroclaw, 53-015', 10, 5, 0),
(2, 'Zesty Farmhouse', 0, 1, 'st. Grota-Roweckiego 130, Wroclaw, 52-214', 10, 5, 0),
(3, 'Chewy Oyster', 0, 1, 'st. Kazimierza Wielkiego 3, Wroclaw, 50-077', 6, 3, 0),
(4, 'Breezy Burger', 0, 1, 'st. Pilsudskiego 5, Wroclaw, 50-020', 6, 2, 0),
(5, 'Blissful BBQpit', 0, 1, 'st. Kollataja 148, Wroclaw, 50-007', 8, 4, 0),
(6, 'Graceful Pizzeria', 0, 1, 'st. Strzegomska 26, Wroclaw, 53-611', 4, 2, 0),
(7, 'Savvy Canteen', 0, 1, 'st. Krzycka 174, Wroclaw, 53-019', 7, 4, 0),
(8, 'Chic Fryhouse', 0, 1, 'st. Wroclawska 136, Wroclaw, 52-200', 4, 4, 0),
(9, 'Classic Pizzeria', 0, 1, 'st. Bajana 29, Wroclaw, 54-129', 5, 5, 0),
(10, 'Inviting Toast', 0, 1, 'st. Dworcowa 182, Wroclaw, 50-456', 1, 5, 0),
(11, 'Daring Buffet', 0, 1, 'st. Raclawicka 139, Wroclaw, 53-149', 4, 3, 0),
(12, 'Exotic Fryhouse', 0, 1, 'st. Kamienna 157, Wroclaw, 50-545', 10, 3, 0),
(13, 'Earthy Shawarma', 0, 1, 'st. Dworcowa 92, Wroclaw, 50-456', 9, 4, 0),
(14, 'Glowing Pub', 0, 1, 'st. Partynicka 167, Wroclaw, 52-200', 7, 4, 0),
(15, 'Hearty Wings', 0, 1, 'st. Dluga 114, Wroclaw, 53-657', 10, 4, 0),
(16, 'Cheerful Sushi', 0, 1, 'st. Buforowa 162, Wroclaw, 52-131', 4, 1, 0),
(17, 'Blissful Tavern', 0, 1, 'st. Kollataja 58, Wroclaw, 50-007', 3, 4, 0),
(18, 'Quirky BBQ', 0, 1, 'st. Opolska 38, Wroclaw, 52-010', 10, 5, 0),
(19, 'Wild Teahouse', 0, 1, 'st. Wlodkowica 18, Wroclaw, 50-072', 10, 2, 0),
(20, 'Modern Gastrobar', 0, 1, 'st. Dyrekcyjna 186, Wroclaw, 50-528', 7, 3, 0),
(21, 'Fancy Cake', 0, 1, 'st. Swidnicka 146, Wroclaw, 50-068', 7, 5, 0),
(22, 'Green Tonkatsu', 0, 1, 'st. Nozownicza 14, Wroclaw, 50-119', 1, 4, 0),
(23, 'Fresh Cake', 0, 1, 'st. Rynek 1, Wroclaw, 50-101', 7, 1, 0),
(24, 'White Lounge', 0, 1, 'st. Skarbowcow 142, Wroclaw, 53-025', 2, 3, 0),
(25, 'Playful Espresso', 0, 1, 'st. Oltaszynska 45, Wroclaw, 52-028', 6, 5, 0),
(26, 'Sharp Juice', 0, 1, 'st. Kobierzycka 137, Wroclaw, 52-315', 3, 2, 0),
(27, 'Splendid Shawarma', 0, 1, 'st. Legnicka 6, Wroclaw, 54-206', 2, 3, 0),
(28, 'Royal Oyster', 0, 1, 'st. Grota-Roweckiego 196, Wroclaw, 52-214', 7, 1, 0),
(29, 'Humble Grill', 0, 1, 'st. Wlodkowica 108, Wroclaw, 50-072', 5, 2, 0),
(30, 'Earthy Farmhouse', 0, 1, 'st. Gliniana 155, Wroclaw, 50-525', 6, 1, 0),
(31, 'Cheerful Burrito', 0, 1, 'st. Slezna 68, Wroclaw, 53-301', 3, 1, 0),
(32, 'Blissful Muffin', 0, 1, 'st. Oltaszynska 135, Wroclaw, 52-028', 6, 1, 0),
(33, 'Charming Sausage', 0, 1, 'st. Zwycieska 197, Wroclaw, 53-033', 4, 2, 0),
(34, 'Smoky Sausage', 0, 1, 'st. Dyrekcyjna 153, Wroclaw, 50-528', 3, 4, 0),
(35, 'Regal Canteen', 0, 1, 'st. Zwycieska 164, Wroclaw, 53-033', 3, 5, 0),
(36, 'Unique Waffle', 0, 1, 'st. Hutnicza 120, Wroclaw, 53-151', 5, 4, 0),
(37, 'Warm BBQpit', 0, 1, 'st. Krzycka 141, Wroclaw, 53-019', 3, 3, 0),
(38, 'Exotic Farmhouse', 0, 1, 'st. Gliniana 65, Wroclaw, 50-525', 1, 4, 0),
(39, 'Savory Taproom', 0, 1, 'st. Sadawa 110, Wroclaw, 50-046', 7, 2, 0),
(40, 'Strong Kiosk', 0, 1, 'st. Krupnicza 19, Wroclaw, 50-075', 4, 5, 0),
(41, 'Earthy Deli', 0, 1, 'st. Swidnicka 2, Wroclaw, 50-066', 1, 2, 0),
(42, 'Dashing Brunch', 0, 1, 'st. Solskiego 140, Wroclaw, 52-416', 1, 3, 0),
(43, 'Bold Fryhouse', 0, 1, 'st. Borowska 185, Wroclaw, 50-558', 5, 3, 0),
(44, 'Smooth Tempura', 0, 1, 'st. Wroclawska 169, Wroclaw, 52-200', 8, 5, 0),
(45, 'Refined Bistrogrill', 0, 1, 'st. Solskiego 83, Wroclaw, 52-416', 1, 4, 0),
(46, 'Cozy Tavern', 0, 1, 'st. Dworcowa 149, Wroclaw, 50-456', 10, 4, 0),
(47, 'Spirited Teahouse', 0, 1, 'st. Bardzka 37, Wroclaw, 50-516', 6, 4, 0),
(48, 'Vivid Gastrobar', 0, 1, 'st. Partynicka 77, Wroclaw, 52-200', 6, 2, 0),
(49, 'Tender Muffin', 0, 1, 'st. Traugutta 113, Wroclaw, 50-417', 6, 5, 0),
(50, 'Wild Flatbread', 0, 0, 'st. Hallera 10, Wroclaw, 53-324', 6, 3, 1),
(51, 'Brisk Salad', 0, 1, 'st. Czekoladowa 138, Wroclaw, 52-326', 5, 3, 0),
(52, 'Quirky Chef', 0, 0, 'st. Hubska 66, Wroclaw, 50-502', 8, 2, 0),
(53, 'Shiny Smoothie', 0, 0, 'st. Zaporoska 31, Wroclaw, 53-519', 2, 5, 0),
(54, 'Bright Fryhouse', 0, 0, 'st. Opolska 194, Wroclaw, 52-010', 10, 5, 0),
(55, 'Smooth Roastery', 0, 0, 'st. Zwycieska 74, Wroclaw, 53-033', 6, 4, 0),
(56, 'Graceful Bistrogrill', 0, 0, 'st. Bardzka 159, Wroclaw, 50-516', 6, 5, 0),
(57, 'Dreamy Curry', 0, 0, 'st. Kuznicza 13, Wroclaw, 50-138', 4, 4, 0),
(58, 'Wild Donut', 0, 0, 'st. Armii Krajowej 70, Wroclaw, 50-541', 4, 4, 0),
(59, 'Gentle Cafe', 0, 0, 'st. Gajowicka 32, Wroclaw, 53-322', 6, 3, 0),
(60, 'Glowing Sandwich', 0, 0, 'st. Czekoladowa 81, Wroclaw, 52-326', 9, 3, 0),
(61, 'Glowing Charcoal', 0, 0, 'st. Hutnicza 30, Wroclaw, 53-151', 4, 3, 0),
(62, 'Gentle Shrimp', 0, 0, 'st. Armii Krajowej 193, Wroclaw, 50-541', 2, 4, 0),
(63, 'Coastal Spice', 0, 0, 'st. Kamienna 67, Wroclaw, 50-545', 10, 1, 0),
(64, 'Rich Fryhouse', 0, 0, 'st. Kuznicza 103, Wroclaw, 50-138', 8, 3, 0),
(65, 'Earthy Sausage', 0, 0, 'st. Karkonoska 198, Wroclaw, 53-015', 10, 4, 0),
(66, 'Splendid Bar', 0, 0, 'st. Swidnicka 89, Wroclaw, 50-068', 2, 5, 0),
(67, 'Tangy Bistrobar', 0, 0, 'st. Rzeznicza 107, Wroclaw, 50-132', 3, 2, 0),
(68, 'Crispy Barbecue', 0, 0, 'st. Sudecka 54, Wroclaw, 53-129', 10, 1, 0),
(69, 'Smoky Steakhouse', 0, 0, 'st. Odrzanska 15, Wroclaw, 50-113', 8, 2, 0),
(70, 'Fiery Pub', 0, 0, 'st. Sudecka 177, Wroclaw, 53-129', 1, 3, 0),
(71, 'Chilly Sweets', 0, 0, 'st. Armii Krajowej 160, Wroclaw, 50-541', 1, 2, 0),
(72, 'Elegant Kiosk', 0, 0, 'st. Joannitow 97, Wroclaw, 50-525', 2, 1, 0),
(73, 'Vivid Tonkatsu', 0, 0, 'st. Rzeznicza 17, Wroclaw, 50-132', 3, 3, 0),
(74, 'Sharp Meze', 0, 0, 'st. Armii Krajowej 126, Wroclaw, 50-541', 7, 1, 0),
(75, 'Silver Diner', 0, 0, 'st. Wita Stwosza 101, Wroclaw, 50-148', 1, 5, 0),
(76, 'Snappy BBQpit', 0, 0, 'st. Sudecka 87, Wroclaw, 53-129', 4, 5, 0),
(77, 'Quirky Falafel', 0, 0, 'st. Kielbasnicza 102, Wroclaw, 50-108', 10, 1, 0),
(78, 'Fiery Grillhouse', 0, 0, 'st. Bardzka 127, Wroclaw, 50-516', 8, 4, 0),
(79, 'Artisan Bistrobar', 0, 0, 'st. Malachowskiego 93, Wroclaw, 50-084', 6, 5, 0),
(80, 'Fluffy Wings', 0, 0, 'st. Borowska 95, Wroclaw, 50-558', 7, 4, 0),
(81, 'Cool Gyros', 0, 0, 'st. Armii Krajowej 36, Wroclaw, 50-541', 8, 3, 0),
(82, 'Heavenly Crepe', 0, 0, 'st. Wyscigowa 166, Wroclaw, 53-011', 3, 2, 0),
(83, 'Exotic Gyoza', 0, 0, 'st. Kollataja 181, Wroclaw, 50-007', 9, 3, 0),
(84, 'Lush Wonton', 0, 0, 'st. Sowia 176, Wroclaw, 52-235', 2, 4, 0),
(85, 'Smooth Barbecue', 0, 0, 'st. Dyrekcyjna 96, Wroclaw, 50-528', 8, 2, 0),
(86, 'Savvy Tapas', 0, 0, 'st. Wyscigowa 199, Wroclaw, 53-011', 1, 2, 0),
(87, 'Simple Gyros', 0, 0, 'st. Traugutta 23, Wroclaw, 50-417', 3, 4, 0),
(88, 'Golden Pasta', 0, 0, 'st. Opolska 71, Wroclaw, 52-010', 7, 1, 0),
(89, 'Golden Cafe', 0, 0, 'st. Dworcowa 59, Wroclaw, 50-456', 3, 5, 0),
(90, 'Coastal Burger', 0, 0, 'st. Zwycieska 41, Wroclaw, 53-033', 2, 5, 0),
(91, 'Coastal Teahouse', 0, 0, 'st. Kobierzycka 80, Wroclaw, 52-315', 4, 2, 0),
(92, 'Vintage Pho', 0, 0, 'st. Krakowska 9, Wroclaw, 50-425', 7, 3, 0),
(93, 'Daring Deli', 0, 0, 'st. Wroclawska 79, Wroclaw, 52-200', 6, 3, 0),
(94, 'Classic Salad', 0, 0, 'st. Sowia 86, Wroclaw, 52-235', 10, 1, 0),
(95, 'Gentle BBQpit', 0, 0, 'st. Solskiego 50, Wroclaw, 52-416', 5, 2, 0),
(96, 'Simple Streetfood', 0, 0, 'st. Sowia 53, Wroclaw, 52-235', 3, 2, 0),
(97, 'Fresh Udon', 0, 0, 'st. Joannitow 187, Wroclaw, 50-525', 1, 2, 0),
(98, 'Velvety Grillhouse', 0, 0, 'st. Karkonoska 132, Wroclaw, 53-015', 9, 4, 0),
(99, 'Grand Meze', 0, 0, 'st. Wita Stwosza 11, Wroclaw, 50-148', 7, 1, 0),
(100, 'Cheerful Panini', 0, 0, 'st. Partynicka 134, Wroclaw, 52-200', 3, 3, 0),
(101, 'test', 0, 0, 'test', 3, 0, 0),
(102, 'test', 0, 0, 'test', 3, 0, 0),
(103, 'test', 0, 0, 'test', 3, 0, 0),
(104, 'test', 0, 0, 'test', 3, 0, 0),
(105, 'test', 0, 1, 'test', 3, 0, 0),
(106, 'Test', 0, 0, 'testowy', 3, 0, 0),
(107, 'Test2', 0, 0, 'Testowa, 24b', 3, 0, 0);

--
-- Wyzwalacze `restaurants`
--
DELIMITER $$
CREATE TRIGGER `after_insert_restaurant` AFTER INSERT ON `restaurants` FOR EACH ROW BEGIN
    INSERT INTO coordinates (id, coordinates, coordinates_to_verify, verified, updated_by, verified_by)
    VALUES (NEW.id, POINT(0, 0), POINT(0, 0), 0, 0, 0);
END
$$
DELIMITER ;
DELIMITER $$
CREATE TRIGGER `hours_insert` AFTER INSERT ON `restaurants` FOR EACH ROW BEGIN
	INSERT INTO `hours` (`id`, `id_restaurant`, `mon`, `tue`, `wed`, `thu`, `fri`, `sat`, `sun`, `special`, `updated_by`, `verified_by`, `verified`, `id_ref`) 			VALUES (NULL, NEW.id, 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', 'closed', NULL, 0, 0, 0, 0);
END
$$
DELIMITER ;

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `restaurants_comments`
--

CREATE TABLE `restaurants_comments` (
  `id_restaurant` int(11) NOT NULL,
  `id_comment` int(11) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `restaurants_comments`
--

INSERT INTO `restaurants_comments` (`id_restaurant`, `id_comment`) VALUES
(100, 1),
(1, 2),
(2, 3),
(3, 4),
(4, 5);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `restaurants_dishes`
--

CREATE TABLE `restaurants_dishes` (
  `id_restaurant` int(11) NOT NULL,
  `id_dish` int(11) NOT NULL,
  `verified` tinyint(1) NOT NULL,
  `updated_by` int(11) NOT NULL,
  `verified_by` int(11) NOT NULL,
  `deleted` tinyint(1) NOT NULL
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `restaurants_dishes`
--

INSERT INTO `restaurants_dishes` (`id_restaurant`, `id_dish`, `verified`, `updated_by`, `verified_by`, `deleted`) VALUES
(1, 60, 0, 0, 3, 1),
(1, 87, 1, 0, 0, 0),
(1, 16, 1, 0, 3, 0),
(1, 96, 1, 0, 0, 0),
(1, 78, 1, 0, 3, 0),
(2, 51, 0, 0, 0, 0),
(2, 19, 0, 0, 0, 0),
(2, 14, 0, 0, 0, 0),
(2, 70, 1, 0, 3, 0),
(3, 38, 1, 0, 0, 0),
(3, 47, 0, 0, 0, 0),
(3, 40, 0, 0, 0, 0),
(4, 52, 1, 0, 0, 0),
(4, 61, 0, 0, 0, 0),
(4, 20, 0, 0, 0, 0),
(4, 48, 1, 0, 0, 0),
(5, 11, 1, 0, 0, 0),
(5, 34, 0, 0, 0, 0),
(5, 92, 1, 0, 0, 0),
(5, 19, 0, 0, 0, 0),
(6, 61, 1, 0, 0, 0),
(6, 63, 1, 0, 0, 0),
(6, 10, 0, 0, 0, 0),
(6, 53, 0, 0, 0, 0),
(6, 4, 1, 0, 0, 0),
(7, 80, 0, 0, 0, 0),
(7, 81, 1, 0, 0, 0),
(7, 46, 0, 0, 0, 0),
(7, 70, 0, 0, 0, 0),
(7, 77, 0, 0, 0, 0),
(8, 62, 0, 0, 0, 0),
(8, 61, 1, 0, 0, 0),
(8, 67, 0, 0, 0, 0),
(8, 93, 1, 0, 0, 0),
(8, 49, 1, 0, 0, 0),
(9, 8, 0, 0, 0, 0),
(9, 94, 1, 0, 0, 0),
(9, 38, 1, 0, 0, 0),
(10, 57, 1, 0, 0, 0),
(10, 27, 1, 0, 0, 0),
(10, 95, 1, 0, 0, 0),
(10, 19, 1, 0, 0, 0),
(10, 68, 0, 0, 0, 0),
(11, 2, 1, 0, 0, 0),
(11, 80, 1, 0, 0, 0),
(11, 83, 0, 0, 0, 0),
(11, 49, 0, 0, 0, 0),
(11, 14, 0, 0, 0, 0),
(12, 81, 1, 0, 0, 0),
(12, 66, 1, 0, 0, 0),
(12, 70, 0, 0, 0, 0),
(13, 5, 0, 0, 0, 0),
(13, 65, 1, 0, 0, 0),
(13, 75, 0, 0, 0, 0),
(13, 67, 0, 0, 0, 0),
(13, 91, 1, 0, 0, 0),
(14, 20, 0, 0, 0, 0),
(14, 2, 0, 0, 0, 0),
(14, 67, 1, 0, 0, 0),
(14, 27, 1, 0, 0, 0),
(14, 64, 1, 0, 0, 0),
(15, 100, 1, 0, 0, 0),
(15, 58, 1, 0, 0, 0),
(15, 72, 0, 0, 0, 0),
(15, 83, 1, 0, 0, 0),
(15, 54, 1, 0, 0, 0),
(16, 65, 1, 0, 0, 0),
(16, 88, 0, 0, 0, 0),
(16, 1, 0, 0, 0, 0),
(16, 33, 0, 0, 0, 0),
(17, 98, 0, 0, 0, 0),
(17, 32, 1, 0, 0, 0),
(17, 7, 1, 0, 0, 0),
(17, 31, 1, 0, 0, 0),
(17, 37, 1, 0, 0, 0),
(18, 26, 1, 0, 0, 0),
(18, 60, 0, 0, 0, 0),
(18, 92, 1, 0, 0, 0),
(18, 33, 1, 0, 0, 0),
(19, 15, 0, 0, 0, 0),
(19, 22, 0, 0, 0, 0),
(19, 20, 0, 0, 0, 0),
(20, 73, 0, 0, 0, 0),
(20, 30, 0, 0, 0, 0),
(20, 54, 0, 0, 0, 0),
(20, 2, 0, 0, 0, 0),
(21, 59, 1, 0, 0, 0),
(21, 4, 1, 0, 0, 0),
(21, 74, 1, 0, 0, 0),
(21, 25, 0, 0, 0, 0),
(21, 28, 1, 0, 0, 0),
(22, 92, 0, 0, 0, 0),
(22, 41, 1, 0, 0, 0),
(22, 66, 1, 0, 0, 0),
(23, 53, 0, 0, 0, 0),
(23, 26, 1, 0, 0, 0),
(23, 82, 1, 0, 0, 0),
(23, 19, 1, 0, 0, 0),
(23, 100, 0, 0, 0, 0),
(24, 87, 0, 0, 0, 0),
(24, 98, 0, 0, 0, 0),
(24, 40, 1, 0, 0, 0),
(24, 42, 1, 0, 0, 0),
(24, 7, 1, 0, 0, 0),
(25, 62, 1, 0, 0, 0),
(25, 47, 0, 0, 0, 0),
(25, 10, 0, 0, 0, 0),
(25, 19, 1, 0, 0, 0),
(26, 68, 1, 0, 0, 0),
(26, 77, 0, 0, 0, 0),
(26, 93, 0, 0, 0, 0),
(26, 67, 0, 0, 0, 0),
(27, 71, 0, 0, 0, 0),
(27, 95, 1, 0, 0, 0),
(27, 63, 0, 0, 0, 0),
(27, 74, 0, 0, 0, 0),
(27, 65, 1, 0, 0, 0),
(28, 29, 0, 0, 0, 0),
(28, 33, 0, 0, 0, 0),
(28, 17, 1, 0, 0, 0),
(29, 48, 1, 0, 0, 0),
(29, 10, 0, 0, 0, 0),
(29, 56, 0, 0, 0, 0),
(30, 40, 1, 0, 0, 0),
(30, 63, 1, 0, 0, 0),
(30, 2, 1, 0, 0, 0),
(30, 93, 0, 0, 0, 0),
(31, 33, 0, 0, 0, 0),
(31, 21, 1, 0, 0, 0),
(31, 51, 1, 0, 0, 0),
(31, 93, 0, 0, 0, 0),
(32, 28, 1, 0, 0, 0),
(32, 79, 0, 0, 0, 0),
(32, 33, 0, 0, 0, 0),
(32, 34, 1, 0, 0, 0),
(32, 17, 0, 0, 0, 0),
(33, 3, 1, 0, 0, 0),
(33, 25, 1, 0, 0, 0),
(33, 23, 0, 0, 0, 0),
(33, 22, 0, 0, 0, 0),
(33, 45, 0, 0, 0, 0),
(34, 13, 1, 0, 0, 0),
(34, 28, 0, 0, 0, 0),
(34, 55, 0, 0, 0, 0),
(34, 9, 1, 0, 0, 0),
(34, 1, 1, 0, 0, 0),
(35, 9, 1, 0, 0, 0),
(35, 7, 1, 0, 0, 0),
(35, 9, 0, 0, 0, 0),
(36, 13, 0, 0, 0, 0),
(36, 100, 1, 0, 0, 0),
(36, 26, 0, 0, 0, 0),
(36, 85, 0, 0, 0, 0),
(36, 22, 1, 0, 0, 0),
(37, 66, 1, 0, 0, 0),
(37, 43, 1, 0, 0, 0),
(37, 87, 0, 0, 0, 0),
(37, 95, 0, 0, 0, 0),
(38, 39, 0, 0, 0, 0),
(38, 81, 1, 0, 0, 0),
(38, 23, 0, 0, 0, 0),
(38, 70, 1, 0, 0, 0),
(38, 25, 1, 0, 0, 0),
(39, 12, 1, 0, 0, 0),
(39, 97, 0, 0, 0, 0),
(39, 85, 1, 0, 0, 0),
(39, 62, 1, 0, 0, 0),
(39, 4, 0, 0, 0, 0),
(40, 3, 0, 0, 0, 0),
(40, 94, 1, 0, 0, 0),
(40, 88, 0, 0, 0, 0),
(41, 19, 1, 0, 0, 0),
(41, 50, 1, 0, 0, 0),
(41, 48, 1, 0, 0, 0),
(41, 35, 0, 0, 0, 0),
(41, 91, 1, 0, 0, 0),
(42, 42, 1, 0, 0, 0),
(42, 84, 1, 0, 0, 0),
(42, 80, 0, 0, 0, 0),
(42, 4, 0, 0, 0, 0),
(42, 72, 1, 0, 0, 0),
(43, 72, 1, 0, 0, 0),
(43, 81, 0, 0, 0, 0),
(43, 56, 0, 0, 0, 0),
(44, 39, 0, 0, 0, 0),
(44, 8, 0, 0, 0, 0),
(44, 99, 1, 0, 0, 0),
(44, 34, 1, 0, 0, 0),
(44, 32, 1, 0, 0, 0),
(45, 24, 0, 0, 0, 0),
(45, 39, 1, 0, 0, 0),
(45, 39, 0, 0, 0, 0),
(45, 5, 1, 0, 0, 0),
(46, 75, 1, 0, 0, 0),
(46, 75, 1, 0, 0, 0),
(46, 64, 0, 0, 0, 0),
(46, 17, 1, 0, 0, 0),
(46, 8, 1, 0, 0, 0),
(47, 61, 0, 0, 0, 0),
(47, 94, 1, 0, 0, 0),
(47, 24, 0, 0, 0, 0),
(47, 90, 0, 0, 0, 0),
(47, 47, 0, 0, 0, 0),
(48, 91, 1, 0, 0, 0),
(48, 15, 1, 0, 0, 0),
(48, 84, 1, 0, 0, 0),
(48, 30, 0, 0, 0, 0),
(49, 76, 0, 0, 0, 0),
(49, 86, 0, 0, 0, 0),
(49, 97, 0, 0, 0, 0),
(49, 25, 1, 0, 0, 0),
(50, 31, 0, 0, 0, 0),
(50, 49, 0, 0, 0, 0),
(50, 21, 0, 0, 0, 0),
(50, 83, 1, 0, 0, 0),
(50, 40, 1, 0, 0, 0),
(51, 97, 0, 0, 0, 0),
(51, 46, 1, 0, 0, 0),
(51, 38, 1, 0, 0, 0),
(51, 12, 1, 0, 0, 0),
(52, 55, 0, 0, 0, 0),
(52, 49, 0, 0, 0, 0),
(52, 24, 1, 0, 0, 0),
(53, 52, 0, 0, 0, 0),
(53, 84, 0, 0, 0, 0),
(53, 89, 1, 0, 0, 0),
(53, 48, 1, 0, 0, 0),
(54, 97, 0, 0, 0, 0),
(54, 88, 1, 0, 0, 0),
(54, 13, 0, 0, 0, 0),
(55, 11, 0, 0, 0, 0),
(55, 3, 1, 0, 0, 0),
(55, 74, 1, 0, 0, 0),
(55, 40, 0, 0, 0, 0),
(55, 7, 0, 0, 0, 0),
(56, 7, 0, 0, 0, 0),
(56, 34, 1, 0, 0, 0),
(56, 91, 1, 0, 0, 0),
(56, 46, 0, 0, 0, 0),
(57, 33, 0, 0, 0, 0),
(57, 28, 0, 0, 0, 0),
(57, 83, 0, 0, 0, 0),
(57, 17, 1, 0, 0, 0),
(57, 65, 1, 0, 0, 0),
(58, 57, 1, 0, 0, 0),
(58, 7, 0, 0, 0, 0),
(58, 92, 0, 0, 0, 0),
(59, 65, 1, 0, 0, 0),
(59, 37, 1, 0, 0, 0),
(59, 59, 1, 0, 0, 0),
(59, 8, 1, 0, 0, 0),
(59, 58, 1, 0, 0, 0),
(60, 4, 1, 0, 0, 0),
(60, 78, 1, 0, 0, 0),
(60, 20, 0, 0, 0, 0),
(60, 18, 0, 0, 0, 0),
(61, 33, 1, 0, 0, 0),
(61, 44, 0, 0, 0, 0),
(61, 91, 0, 0, 0, 0),
(61, 74, 0, 0, 0, 0),
(61, 74, 1, 0, 0, 0),
(62, 11, 1, 0, 0, 0),
(62, 97, 0, 0, 0, 0),
(62, 30, 0, 0, 0, 0),
(62, 69, 1, 0, 0, 0),
(63, 43, 1, 0, 0, 0),
(63, 79, 1, 0, 0, 0),
(63, 35, 0, 0, 0, 0),
(64, 75, 0, 0, 0, 0),
(64, 61, 1, 0, 0, 0),
(64, 16, 0, 0, 0, 0),
(64, 8, 1, 0, 0, 0),
(64, 69, 0, 0, 0, 0),
(65, 54, 0, 0, 0, 0),
(65, 52, 0, 0, 0, 0),
(65, 32, 0, 0, 0, 0),
(65, 44, 0, 0, 0, 0),
(65, 53, 1, 0, 0, 0),
(66, 8, 0, 0, 0, 0),
(66, 97, 0, 0, 0, 0),
(66, 36, 1, 0, 0, 0),
(66, 45, 0, 0, 0, 0),
(67, 97, 1, 0, 0, 0),
(67, 21, 1, 0, 0, 0),
(67, 19, 1, 0, 0, 0),
(68, 41, 0, 0, 0, 0),
(68, 99, 0, 0, 0, 0),
(68, 59, 1, 0, 0, 0),
(68, 70, 1, 0, 0, 0),
(68, 9, 0, 0, 0, 0),
(69, 22, 0, 0, 0, 0),
(69, 94, 0, 0, 0, 0),
(69, 16, 1, 0, 0, 0),
(69, 99, 0, 0, 0, 0),
(70, 11, 0, 0, 0, 0),
(70, 23, 1, 0, 0, 0),
(70, 68, 0, 0, 0, 0),
(71, 47, 1, 0, 0, 0),
(71, 1, 0, 0, 0, 0),
(71, 46, 0, 0, 0, 0),
(71, 96, 0, 0, 0, 0),
(72, 31, 1, 0, 0, 0),
(72, 98, 0, 0, 0, 0),
(72, 90, 1, 0, 0, 0),
(72, 64, 0, 0, 0, 0),
(72, 36, 0, 0, 0, 0),
(73, 20, 1, 0, 0, 0),
(73, 75, 0, 0, 0, 0),
(73, 25, 0, 0, 0, 0),
(73, 46, 0, 0, 0, 0),
(74, 85, 0, 0, 0, 0),
(74, 7, 1, 0, 0, 0),
(74, 4, 1, 0, 0, 0),
(74, 95, 0, 0, 0, 0),
(74, 51, 0, 0, 0, 0),
(75, 28, 1, 0, 0, 0),
(75, 3, 0, 0, 0, 0),
(75, 97, 0, 0, 0, 0),
(76, 12, 0, 0, 0, 0),
(76, 30, 1, 0, 0, 0),
(76, 82, 1, 0, 0, 0),
(76, 33, 0, 0, 0, 0),
(77, 76, 1, 0, 0, 0),
(77, 24, 0, 0, 0, 0),
(77, 97, 0, 0, 0, 0),
(77, 52, 1, 0, 0, 0),
(78, 45, 0, 0, 0, 0),
(78, 89, 0, 0, 0, 0),
(78, 14, 0, 0, 0, 0),
(79, 11, 0, 0, 0, 0),
(79, 52, 1, 0, 0, 0),
(79, 22, 1, 0, 0, 0),
(80, 30, 1, 0, 0, 0),
(80, 40, 1, 0, 0, 0),
(80, 8, 0, 0, 0, 0),
(81, 11, 1, 0, 0, 0),
(81, 93, 1, 0, 0, 0),
(81, 57, 0, 0, 0, 0),
(82, 10, 1, 0, 0, 0),
(82, 24, 1, 0, 0, 0),
(82, 19, 1, 0, 0, 0),
(83, 75, 1, 0, 0, 0),
(83, 43, 0, 0, 0, 0),
(83, 38, 1, 0, 0, 0),
(83, 5, 1, 0, 0, 0),
(84, 76, 1, 0, 0, 0),
(84, 81, 1, 0, 0, 0),
(84, 28, 1, 0, 0, 0),
(84, 21, 1, 0, 0, 0),
(85, 82, 1, 0, 0, 0),
(85, 73, 1, 0, 0, 0),
(85, 86, 1, 0, 0, 0),
(85, 92, 0, 0, 0, 0),
(85, 3, 0, 0, 0, 0),
(86, 36, 0, 0, 0, 0),
(86, 24, 0, 0, 0, 0),
(86, 93, 1, 0, 0, 0),
(87, 55, 0, 0, 0, 0),
(87, 58, 1, 0, 0, 0),
(87, 92, 0, 0, 0, 0),
(87, 53, 0, 0, 0, 0),
(87, 12, 0, 0, 0, 0),
(88, 14, 1, 0, 0, 0),
(88, 59, 0, 0, 0, 0),
(88, 81, 1, 0, 0, 0),
(89, 50, 0, 0, 0, 0),
(89, 50, 1, 0, 0, 0),
(89, 38, 1, 0, 0, 0),
(89, 85, 1, 0, 0, 0),
(89, 30, 1, 0, 0, 0),
(90, 84, 0, 0, 0, 0),
(90, 38, 0, 0, 0, 0),
(90, 12, 0, 0, 0, 0),
(90, 28, 1, 0, 0, 0),
(90, 66, 1, 0, 0, 0),
(91, 41, 1, 0, 0, 0),
(91, 34, 0, 0, 0, 0),
(91, 60, 1, 0, 0, 0),
(91, 21, 1, 0, 0, 0),
(92, 32, 0, 0, 0, 0),
(92, 99, 1, 0, 0, 0),
(92, 73, 1, 0, 0, 0),
(92, 76, 1, 0, 0, 0),
(93, 65, 0, 0, 0, 0),
(93, 24, 0, 0, 0, 0),
(93, 100, 1, 0, 0, 0),
(93, 15, 0, 0, 0, 0),
(93, 85, 0, 0, 0, 0),
(94, 69, 1, 0, 0, 0),
(94, 80, 0, 0, 0, 0),
(94, 62, 1, 0, 0, 0),
(94, 38, 0, 0, 0, 0),
(95, 71, 1, 0, 0, 0),
(95, 73, 0, 0, 0, 0),
(95, 56, 0, 0, 0, 0),
(95, 79, 1, 0, 0, 0),
(95, 42, 0, 0, 0, 0),
(96, 83, 0, 0, 0, 0),
(96, 100, 0, 0, 0, 0),
(96, 88, 0, 0, 0, 0),
(97, 25, 0, 0, 0, 0),
(97, 63, 0, 0, 0, 0),
(97, 37, 0, 0, 0, 0),
(98, 15, 0, 0, 0, 0),
(98, 81, 1, 0, 0, 0),
(98, 56, 1, 0, 0, 0),
(99, 31, 0, 0, 0, 0),
(99, 49, 0, 0, 0, 0),
(99, 97, 0, 0, 0, 0),
(99, 74, 0, 0, 0, 0),
(100, 34, 0, 0, 0, 0),
(100, 64, 1, 0, 0, 0),
(100, 57, 0, 0, 0, 0),
(100, 53, 0, 0, 0, 0),
(105, 101, 0, 3, 0, 0),
(105, 102, 0, 3, 0, 0),
(105, 103, 0, 3, 0, 0),
(105, 104, 0, 3, 0, 0);

--
-- Wyzwalacze `restaurants_dishes`
--
DELIMITER $$
CREATE TRIGGER `verify_dishes_type` AFTER UPDATE ON `restaurants_dishes` FOR EACH ROW BEGIN
    UPDATE dishes
    SET 
        vegan = CASE
            WHEN EXISTS (
                SELECT 1
                FROM ingredients_dishes id
                INNER JOIN ingredients i ON id.id_ingredient = i.id
                INNER JOIN restaurants_dishes rd ON rd.id_dish = id.id_dish
                WHERE id.id_dish = NEW.id_dish AND i.vegan = 0 AND rd.verified = 1
            )
            THEN 0 ELSE 1 END,
        vegetarian = CASE
            WHEN EXISTS (
                SELECT 1
                FROM ingredients_dishes id
                INNER JOIN ingredients i ON id.id_ingredient = i.id
                INNER JOIN restaurants_dishes rd ON rd.id_dish = id.id_dish
                WHERE id.id_dish = NEW.id_dish AND i.vegetarian = 0 AND rd.verified = 1
            )
            THEN 0 ELSE 1 END
    WHERE id = NEW.id_dish; 
END
$$
DELIMITER ;

-- --------------------------------------------------------

--
-- Zastąpiona struktura widoku `restaurant_details`
-- (See below for the actual view)
--
CREATE TABLE `restaurant_details` (
`name` text
,`opinion` float
,`coordinates` point
,`address` text
,`res_cuisines` mediumtext
,`up_by` text
,`ver_by` text
,`res_id` int(11)
);

-- --------------------------------------------------------

--
-- Struktura tabeli dla tabeli `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `login` text NOT NULL,
  `password` text NOT NULL,
  `email` text NOT NULL,
  `username` text NOT NULL,
  `is_admin` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `login`, `password`, `email`, `username`, `is_admin`) VALUES
(1, 'admin', '$2b$10$MsR8wrBepHr/7glAs8cuMORZxueDKPb2mrZQZFyiaHEjfBTZjsdF6', 'admin@aa.aa', 'admin', 1),
(2, 'tester', '$2b$10$MsR8wrBepHr/7glAs8cuMORZxueDKPb2mrZQZFyiaHEjfBTZjsdF6', 'tester@aa.aa', 'tester', 0),
(3, 'test', '$2b$10$4HEV11V4YW143It1v1nqx.dXGmhICO4dC9MFdoQppPgA3hMce4CMu', 'test@test.te', 'tester2', 1);

-- --------------------------------------------------------

--
-- Struktura widoku `dishes_info`
--
DROP TABLE IF EXISTS `dishes_info`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `dishes_info`  AS SELECT `dishes`.`id` AS `id`, `dishes`.`name` AS `name`, `dishes`.`calories` AS `calories`, `dishes`.`price` AS `price`, `dishes`.`weight` AS `weight`, group_concat(`ingredients`.`name` separator ',') AS `ingredient_names`, `restaurants_dishes`.`id_restaurant` AS `res_id` FROM (((`dishes` join `restaurants_dishes` on(`restaurants_dishes`.`id_dish` = `dishes`.`id`)) join `ingredients_dishes` on(`dishes`.`id` = `ingredients_dishes`.`id_dish`)) join `ingredients` on(`ingredients_dishes`.`id_ingredient` = `ingredients`.`id`)) GROUP BY `dishes`.`id`, `restaurants_dishes`.`id_restaurant` ORDER BY `dishes`.`id` ASC ;

-- --------------------------------------------------------

--
-- Struktura widoku `restaurant_details`
--
DROP TABLE IF EXISTS `restaurant_details`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `restaurant_details`  AS SELECT `restaurants`.`name` AS `name`, `restaurants`.`opinion` AS `opinion`, `coordinates`.`coordinates` AS `coordinates`, `restaurants`.`address` AS `address`, group_concat(`cuisines`.`type` separator ',') AS `res_cuisines`, `client`.`username` AS `up_by`, `admin`.`username` AS `ver_by`, `restaurants`.`id` AS `res_id` FROM (((((`restaurants` join `cuisines_restaurants` on(`restaurants`.`id` = `cuisines_restaurants`.`id_restaurant`)) join `coordinates` on(`restaurants`.`id` = `coordinates`.`id`)) join `cuisines` on(`cuisines`.`id` = `cuisines_restaurants`.`id_cuisine`)) left join `users` `client` on(`client`.`id` = `restaurants`.`updated_by`)) left join `users` `admin` on(`admin`.`id` = `restaurants`.`verified_by`)) GROUP BY `restaurants`.`id` ;

--
-- Indeksy dla zrzutów tabel
--

--
-- Indeksy dla tabeli `allergens`
--
ALTER TABLE `allergens`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `coordinates`
--
ALTER TABLE `coordinates`
  ADD PRIMARY KEY (`id`),
  ADD SPATIAL KEY `coordinates` (`coordinates`);

--
-- Indeksy dla tabeli `cuisines`
--
ALTER TABLE `cuisines`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `dishes`
--
ALTER TABLE `dishes`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `hours`
--
ALTER TABLE `hours`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `ingredients`
--
ALTER TABLE `ingredients`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `restaurants`
--
ALTER TABLE `restaurants`
  ADD PRIMARY KEY (`id`);

--
-- Indeksy dla tabeli `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `allergens`
--
ALTER TABLE `allergens`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=101;

--
-- AUTO_INCREMENT for table `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `cuisines`
--
ALTER TABLE `cuisines`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=101;

--
-- AUTO_INCREMENT for table `dishes`
--
ALTER TABLE `dishes`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=105;

--
-- AUTO_INCREMENT for table `hours`
--
ALTER TABLE `hours`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=108;

--
-- AUTO_INCREMENT for table `ingredients`
--
ALTER TABLE `ingredients`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=101;

--
-- AUTO_INCREMENT for table `restaurants`
--
ALTER TABLE `restaurants`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=108;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
